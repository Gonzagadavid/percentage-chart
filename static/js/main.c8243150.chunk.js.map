{"version":3,"sources":["pages/CodePage/CodePage.jsx","pages/Home/Home.jsx","redux/actions/index.js","components/EditBar/EditBar.jsx","components/InputsContainer/EditBarContainer.jsx","data/inputs.js","components/Input/Input.jsx","components/Select/Select.jsx","components/InputsContainer/InputBackground.jsx","components/InputsContainer/InputBar.jsx","components/InputsContainer/InputData.jsx","components/InputsContainer/Lengend.jsx","pages/DataPage/DataPage.jsx","components/NavSet/NavSet.jsx","pages/GraphicPage/GraphicPage.jsx","pages/SetPage/SetPage.jsx","data/summaryInfo.js","pages/SummaryPage.jsx/SummaryPage.jsx","constants/selectStyles.js","pages/Home/messages/index.js","pages/Home/messages/pt-BR/index.js","pages/Home/messages/en-US/index.js","pages/SetPage/messages/index.js","pages/SetPage/messages/pt-BR/index.js","pages/SetPage/messages/en-US/index.js","pages/CodePage/messages/index.js","pages/CodePage/messages/pt-BR/index.js","pages/CodePage/messages/en-US/index.js","components/NavSet/messages/index.js","components/NavSet/messages/pt-BR/index.js","components/NavSet/messages/en-US/index.js","data/messages/index.js","data/messages/pt-BR/index.js","data/messages/en-US/index.js","locales/languages/index.js","locales/languages/messages.js","locales/messages/pt-BR/common.js","locales/messages/en-US/common.js","components/SelectLanguage/index.jsx","App.jsx","redux/reducers/index.js","redux/index.js","locales/index.jsx","index.jsx"],"names":["connect","state","style","data","colors","widthGraph","heightGraph","widthBorder","backgroundColor","lineColor","fontSizeBackground","percentSide","widthLine","fontBackground","maxPercent","widthBar","fontSizeBar","fontBar","fontColordifBar","fontColor","topPercent","withLegend","fontLegend","fontLegendSize","fontColorLegend","colorLegend","borderLegend","colorBorderLegend","baseName","legendSide","legendVertical","borderColor","objectCode","useRef","npm","importLine","importComp","objData","Object","entries","reduce","str","arr","i","useState","copied","setCopied","copyToClip","ref","tempInput","document","createElement","value","current","innerText","body","appendChild","select","execCommand","removeChild","setTimeout","queryCommandSupported","className","id","type","onClick","map","color","items","Array","fill","_","Home","ADD_DATA","ADD_COLOR","ADD_BACKGROUND","ADD_STYLEBAR","ADD_LEGEND","REMOVE_DATA","EDIT_COLOR","EDIT_QTY","LANGUAGE","EditBar","text","changeColor","qty","changeQty","remove","onChange","dispatch","removeData","actionRemoveData","editColor","actionEditColor","editQty","actionEditQty","names","keys","name","index","target","inputBackground","labelText","inputData","inputBar","legend","Input","props","change","checked","htmlFor","defaultProps","Select","options","option","addBackground","actionAddBackground","formatMessage","useIntl","handlerChange","addStyleBar","actionAddStyleBar","valueInput","addData","actionAddData","addColor","actionAddColor","INITIAL_STATE","dataName","setState","addLegend","actionAddLegend","settingsRoutes","DataPage","exact","path","component","InputBackground","InputData","EditBarContainer","InputBar","Legend","NavSet","to","SetPage","summaryData","description","summaryStyle","SummaryPage","selectLanguages","menu","base","width","background","padding","position","margin","menuList","dropdownIndicator","control","selectProps","display","alignItems","borderRadius","border","height","WebkitUserSelect","singleValue","opacity","transition","textAlign","title","subtitle","item1","item2","item3","item4","item5","installLib","finishing","createFile","version","importProps","styleBar","editBar","percentSideLeft","percentSideRight","insertData","legendSideLeft","legendSideRight","legendVerticalTop","legendVerticalLower","withSub","backgrondColor","fontBackgorund","WidthBorder","fonteLegend","messages","common","home","styleChart","styleCode","summary","summaryPage","dynamicData","styleData","setPage","codePage","navSetComponent","inputLabel","SelectLanguage","useDispatch","setLanguage","tag","label","code","split","defaultValue","styles","getOptionLabel","e","marginRight","src","toLowerCase","alt","routes","App","fontSize","href","rel","CodePage","Acertos","Erros","locale","reducerData","action","filter","key","newState","store","createStore","composeWithDevTools","LocaleProvider","children","useSelector","textComponent","Fragment","flatten","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c8243150.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './CodePage.css';\nimport Highlight from 'react-highlight';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { FaRegCopy } from 'react-icons/fa';\nimport { FormattedMessage } from 'react-intl';\n\nconst CodePage = ({\n  heightGraph, widthGraph, backgroundColor, lineColor, fontBar, fontSizeBackground,\n  widthLine, fontBackground, percentSide, widthBar, fontSizeBar,\n  fontColordifBar, fontColor, topPercent, withLegend, fontLegend, fontLegendSize, colorLegend,\n  borderLegend, colorBorderLegend, fontColorLegend, baseName, legendSide, legendVertical,\n  widthBorder, borderColor, data, maxPercent, colors,\n}) => {\n  const objectCode = useRef(null);\n  const npm = useRef(null);\n  const importLine = useRef(null);\n  const importComp = useRef(null);\n  const objData = `${Object\n    .entries(data)\n    .reduce((str, arr, i) => `${str}${i !== 0 ? ',' : ''} ${arr[0]}: ${arr[1]}`, '')} `;\n\n  const [copied, setCopied] = useState(false);\n  const copyToClip = (ref) => {\n    const tempInput = document.createElement('textarea');\n    tempInput.value = ref.current.innerText;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempInput);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 3000);\n  };\n\n  return (document.queryCommandSupported('copy')\n    && (\n    <div className=\"CodePage\">\n      {copied ? (\n        <p className=\"copied\">\n          <GiConfirmed />\n          <span><FormattedMessage id=\"codePage.copied\" /></span>\n        </p>\n      ) : ''}\n      <h2><FormattedMessage id=\"codePage.finishing\" /></h2>\n      <p><FormattedMessage id=\"codePage.createFile\" /></p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(objectCode)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={objectCode}>\n            {\n            `\n//style.js\n            \nconst style = { \n  widthGraph: '${widthGraph}',\n  widthBorder: '${widthBorder}',\n  heightGraph: '${heightGraph}',\n  backgroundColor: '${backgroundColor}',\n  lineColor: '${lineColor}',\n  fontSizeBackground: '${fontSizeBackground}',\n  percentSide: '${percentSide}',\n  widthLine: '${widthLine}',\n  fontBackground: '${fontBackground}',\n  widthBar: '${widthBar}',\n  fontSizeBar: '${fontSizeBar}',\n  fontBar: '${fontBar}',\n  fontColordifBar: ${fontColordifBar},\n  fontColor: '${fontColor}',\n  topPercent: ${topPercent},\n  withLegend: ${withLegend},\n  fontLegend: '${fontLegend}',\n  fontLegendSize: '${fontLegendSize}',\n  fontColorLegend: '${fontColorLegend}',\n  colorLegend: '${colorLegend}',\n  borderLegend: '${borderLegend}',\n  colorBorderLegend: '${colorBorderLegend}',\n  baseName: ${baseName},\n  legendSide: '${legendSide}',\n  legendVertical: '${legendVertical}',\n  borderColor: '${borderColor}',\n}\n\nexport default style\n`\n}\n          </p>\n        </Highlight>\n      </div>\n      <p>\n        <FormattedMessage id=\"codePage.installLib\" />\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(npm)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-shell\">\n          <p ref={npm}>\n            npm i stylized-graphic-component\n          </p>\n        </Highlight>\n        <em>\n          <FormattedMessage id=\"codePage.version\" />\n        </em>\n        <em>npm i stylized-graphic-component@1.0.5</em>\n      </div>\n      <p>\n        <FormattedMessage id=\"codePage.importProps\" />\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(importLine)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={importLine}>\n            {'import { GraphicComponent } from \\'stylized-graphic-component\\'' }\n          </p>\n        </Highlight>\n      </div>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(importComp)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={importComp}>\n            {\n              `\nimport React from 'react';\nimport { GraphicComponent } from 'stylized-graphic-component'\nimport style from ./path/style\n\nconst GraphicPage = () => (\n  <div className=\"graphic\">\n  <GraphicComponent\n      style={style}\n      data={{${objData}}}\n      maxPercent={'${maxPercent}'}\n      colors={[${colors.map((color) => `'${color}'`)}]}\n    />\n  </div>\n)\n\nexport default GraphicPage;\n`\n            }\n          </p>\n        </Highlight>\n      </div>\n    </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  widthGraph: state.widthGraph,\n  heightGraph: state.heightGraph,\n  widthBorder: state.widthBorder,\n  backgroundColor: state.backgroundColor,\n  lineColor: state.lineColor,\n  fontSizeBackground: state.fontSizeBackground,\n  percentSide: state.percentSide,\n  widthLine: state.widthLine,\n  fontBackground: state.fontBackground,\n  maxPercent: state.maxPercent,\n  widthBar: state.widthBar,\n  fontSizeBar: state.fontSizeBar,\n  fontBar: state.fontBar,\n  fontColordifBar: state.fontColordifBar,\n  fontColor: state.fontColor,\n  topPercent: state.topPercent,\n  withLegend: state.withLegend,\n  fontLegend: state.fontLegend,\n  fontLegendSize: state.fontLegendSize,\n  fontColorLegend: state.fontColorLegend,\n  colorLegend: state.colorLegend,\n  borderLegend: state.borderLegend,\n  colorBorderLegend: state.colorBorderLegend,\n  baseName: state.baseName,\n  legendSide: state.legendSide,\n  legendVertical: state.legendVertical,\n  borderColor: state.borderColor,\n});\nexport default connect(mapStateToProps)(CodePage);\n","import React from 'react';\nimport { FaReact } from 'react-icons/fa';\nimport { FormattedMessage } from 'react-intl';\nimport './Home.css';\n\nconst items = Array(5).fill('').map((_, i) => (\n  <li key={`item${i}`}><FormattedMessage id={`home.item${i + 1}`} /></li>\n));\n\nconst Home = () => (\n  <div className=\"Home\">\n    <h1>\n      <FaReact />\n      {' '}\n      Stylized Graphic Component\n      {' '}\n      <FaReact />\n    </h1>\n    <p>\n      <FormattedMessage id=\"home.title\" />\n    </p>\n    <p><FormattedMessage id=\"home.subtitle\" /></p>\n    <ul>\n      {items}\n    </ul>\n  </div>\n);\n\nexport default Home;\n","export const ADD_DATA = 'ADD_DATA';\nexport const ADD_COLOR = 'ADD_COLOR';\nexport const ADD_BACKGROUND = 'ADD_BACKGROUND';\nexport const ADD_STYLEBAR = 'ADD_STYLEBAR';\nexport const ADD_LEGEND = 'ADD_LEGEND';\nexport const REMOVE_DATA = 'REMOVE_DATA';\nexport const EDIT_COLOR = 'EDIT_COLOR';\nexport const EDIT_QTY = 'EDIT_QTY';\nexport const LANGUAGE = 'LANGUAGE';\n\nexport const actionAddData = (state) => ({ type: ADD_DATA, state });\n\nexport const actionAddColor = (state) => ({ type: ADD_COLOR, state });\n\nexport const actionAddBackground = (state) => ({ type: ADD_BACKGROUND, state });\n\nexport const actionAddStyleBar = (state) => ({ type: ADD_STYLEBAR, state });\n\nexport const actionAddLegend = (state) => ({ type: ADD_LEGEND, state });\n\nexport const actionRemoveData = (state) => ({ type: REMOVE_DATA, state });\n\nexport const actionEditColor = (state) => ({ type: EDIT_COLOR, state });\n\nexport const actionEditQty = (state) => ({ type: EDIT_QTY, state });\n\nexport const actionLanguage = (state) => ({ type: LANGUAGE, state });\n","import React from 'react';\nimport { BsFillTrashFill } from 'react-icons/bs';\nimport './Editar.css';\n\nconst EditBar = ({\n  text, color, changeColor, qty, changeQty, remove,\n}) => (\n  <div className=\"EditBar\">\n    <span>{text}</span>\n    <input type=\"color\" value={color} onChange={changeColor} />\n    <input type=\"number\" value={qty} onChange={changeQty} />\n    <button type=\"button\" onClick={remove}><BsFillTrashFill /></button>\n  </div>\n);\n\nexport default EditBar;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { actionEditColor, actionEditQty, actionRemoveData } from '../../redux/actions';\nimport EditBar from '../EditBar/EditBar';\nimport './InputContainer.css';\n\nconst EditBarContainer = ({\n  data, colors, removeData, editColor, editQty,\n}) => {\n  const names = Object.keys(data);\n  return (\n    <div className=\"InputConatiner\">\n      <h3><FormattedMessage id=\"navSetComponent.editBar\" /></h3>\n      {names.map((name, index) => (\n        <EditBar\n          text={name}\n          key={name}\n          color={colors[index]}\n          qty={data[name]}\n          remove={() => removeData({ name, color: colors[index] })}\n          changeColor={({ target: { value } }) => editColor({ index, color: value })}\n          changeQty={({ target: { value } }) => editQty({ name, qty: value })}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  colors: state.colors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeData: (state) => dispatch(actionRemoveData(state)),\n  editColor: (state) => dispatch(actionEditColor(state)),\n  editQty: (state) => dispatch(actionEditQty(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBarContainer);\n","export const inputBackground = [\n  { type: 'color', name: 'backgroundColor', labelText: 'backgroundColor' },\n  { type: 'color', name: 'lineColor', labelText: 'lineColor' },\n  { type: 'number', name: 'widthLine', labelText: 'widthLine' },\n  { type: 'number', name: 'fontSizeBackground', labelText: 'fontSizeBackground' },\n  { type: 'text', name: 'fontBackground', labelText: 'fontBackground' },\n  { type: 'number', name: 'widthGraph', labelText: 'widthGraph' },\n  { type: 'number', name: 'heightGraph', labelText: 'heightGraph' },\n  { type: 'number', name: 'widthBorder', labelText: 'widthBorder' },\n  { type: 'color', name: 'borderColor', labelText: 'borderColor' },\n  {\n    type: 'radio', name: 'percentSide', labelText: 'percentSideLeft', value: 'left',\n  },\n  {\n    type: 'radio', name: 'percentSide', labelText: 'percentSideRight', value: 'right',\n  },\n];\n\nexport const inputData = [\n  { type: 'text', name: 'dataName' },\n  { type: 'number', name: 'qty' },\n  { type: 'color', name: 'color' },\n];\n\nexport const inputBar = [\n  { type: 'checkbox', name: 'fontColordifBar' },\n  { type: 'number', name: 'widthBar' },\n  { type: 'number', name: 'fontSizeBar' },\n  { type: 'text', name: 'fontBar' },\n  { type: 'checkbox', name: 'topPercent' },\n  { type: 'checkbox', name: 'baseName' },\n];\n\nexport const legend = [\n  { type: 'number', name: 'fontLegendSize', labelText: 'fontLegendSize' },\n  { type: 'color', name: 'fontColorLegend', labelText: 'fontColorLegend' },\n  { type: 'color', name: 'colorLegend', labelText: 'colorLegend' },\n  { type: 'number', name: 'borderLegend', labelText: 'borderLegend' },\n  { type: 'color', name: 'colorBorderLegend', labelText: 'colorBorderLegend' },\n  {\n    type: 'radio', name: 'legendSide', labelText: 'legendSideLeft', value: 'left',\n  },\n  {\n    type: 'radio', name: 'legendSide', labelText: 'legendSideRight', value: 'right',\n  },\n  {\n    type: 'radio', name: 'legendVertical', labelText: 'legendVerticalTop', value: 'atop',\n  },\n  {\n    type: 'radio', name: 'legendVertical', labelText: 'legendVerticalLower', value: 'bottom',\n  },\n];\n","import {\n  bool,\n  func, string, number, oneOfType,\n} from 'prop-types';\nimport './Input.css';\n\nimport React from 'react';\n\nconst Input = (props) => {\n  const {\n    labelText, value, change, type, name, checked,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Input\">\n      {type !== 'radio' && type !== 'checkbox' ? labelText : ''}\n      <input\n        type={type}\n        id={name}\n        value={value}\n        checked={checked}\n        onChange={change}\n        name={name}\n      />\n      {type === 'radio' || type === 'checkbox' ? labelText : ''}\n    </label>\n  );\n};\n\nInput.propTypes = {\n  labelText: string.isRequired,\n  value: oneOfType([number, string, bool]),\n  change: func.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n};\n\nInput.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Input;\n","import { func, string, arrayOf } from 'prop-types';\nimport React from 'react';\nimport './Select.css';\n\nconst Select = (props) => {\n  const {\n    labelText, value, change, name, options,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Select\">\n      {labelText}\n      <select\n        id={name}\n        value={value}\n        onChange={change}\n        name={name}\n      >\n        {\n          options.map((option) => <option key={option}>{option}</option>)\n        }\n      </select>\n    </label>\n  );\n};\n\nSelect.propTypes = {\n  labelText: string.isRequired,\n  value: string,\n  change: func.isRequired,\n  name: string.isRequired,\n  options: arrayOf(string).isRequired,\n};\n\nSelect.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Select;\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { inputBackground } from '../../data/inputs';\nimport { actionAddBackground } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport Select from '../Select/Select';\nimport './InputContainer.css';\n\nconst InputBackground = ({ state, addBackground }) => {\n  const { formatMessage } = useIntl();\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    addBackground({ [name]: value });\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3><FormattedMessage id=\"navSetComponent.background\" /></h3>\n      {\n        inputBackground.map(({\n          type, name, labelText, value,\n        }) => (\n          <Input\n            type={type}\n            key={labelText}\n            name={name}\n            labelText={formatMessage({ id: `inputLabel.inputBackground.${labelText}` })}\n            value={value || state[name]}\n            change={handlerChange}\n          />\n        ))\n      }\n      <Select\n        name=\"maxPercent\"\n        labelText=\"Porcetagem a ser exibida:\"\n        value={state.maxPercent}\n        change={handlerChange}\n        options={['100%', '70%', '50%']}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ state });\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBackground: (state) => dispatch(actionAddBackground(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBackground);\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { inputBar } from '../../data/inputs';\nimport { actionAddStyleBar } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nconst InputBar = ({ addStyleBar, state }) => {\n  const { formatMessage } = useIntl();\n  const handlerChange = ({ target }) => {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    addStyleBar({ [name]: valueInput });\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3><FormattedMessage id=\"navSetComponent.styleBar\" /></h3>\n      {\n         state.fontColordifBar\n        && (\n        <Input\n          type=\"color\"\n          name=\"fontColor\"\n          labelText={formatMessage({ id: 'inputLabel.inputBar.fontColor' })}\n          value={state.fontColor}\n          change={handlerChange}\n        />\n        )\n        }\n      {\n        inputBar.map(({ name, type }) => (\n          <Input\n            type={type}\n            name={name}\n            labelText={formatMessage({ id: `inputLabel.inputBar.${name}` })}\n            checked={state[name]}\n            value={state[name]}\n            change={handlerChange}\n          />\n        ))\n        }\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ state });\n\nconst mapDispatchToProps = (dispatch) => ({\n  addStyleBar: (state) => dispatch(actionAddStyleBar(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBar);\n","import React, { useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\nimport { inputData } from '../../data/inputs';\nimport { actionAddColor, actionAddData } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nconst InputData = ({ addData, addColor }) => {\n  const INITIAL_STATE = { dataName: '', qty: 0, color: 'black' };\n  const { formatMessage } = useIntl();\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    setState({ ...state, [name]: value });\n  };\n\n  const insertData = () => {\n    const { dataName, qty, color } = state;\n    addData({ [dataName]: qty });\n    addColor(color);\n    setState(INITIAL_STATE);\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3><FormattedMessage id=\"navSetComponent.data\" /></h3>\n      {\n        inputData.map(({ type, name }) => (\n          <Input\n            type={type}\n            name={name}\n            labelText={formatMessage({ id: `inputLabel.inputData.${name}` })}\n            value={state[name]}\n            change={handlerChange}\n          />\n        ))\n      }\n      <button type=\"button\" onClick={insertData}><FormattedMessage id=\"inputLabel.inputData.insertData\" /></button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addData: (state) => dispatch(actionAddData(state)),\n  addColor: (state) => dispatch(actionAddColor(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputData);\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { legend } from '../../data/inputs';\nimport { actionAddLegend } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nconst Legend = ({ state, addLegend }) => {\n  const { formatMessage } = useIntl();\n  const handlerChange = ({ target }) => {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    addLegend({ [name]: valueInput });\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3><FormattedMessage id=\"navSetComponent.subtitle\" /></h3>\n      <Input type=\"checkbox\" name=\"withLegend\" labelText={formatMessage({ id: 'inputLabel.legend.withSub' })} checked={state.withLegend} change={handlerChange} />\n      { state.withLegend\n        && (\n          <>\n            {legend.map(({\n              name, type, value, checked, labelText,\n            }) => (\n              <Input\n                type={type}\n                name={name}\n                labelText={formatMessage({ id: `inputLabel.legend.${labelText}` })}\n                checked={checked}\n                value={value || state[name]}\n                change={handlerChange}\n              />\n            ))}\n          </>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ state });\n\nconst mapDispacthToProps = (dispatch) => ({\n  addLegend: (state) => dispatch(actionAddLegend(state)),\n});\n\nexport default connect(mapStateToProps, mapDispacthToProps)(Legend);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport EditBarContainer from '../../components/InputsContainer/EditBarContainer';\nimport InputBackground from '../../components/InputsContainer/InputBackground';\nimport InputBar from '../../components/InputsContainer/InputBar';\nimport InputData from '../../components/InputsContainer/InputData';\nimport Legend from '../../components/InputsContainer/Lengend';\nimport './DataPage.css';\n\nexport const settingsRoutes = {\n  BACKGROUND: '/settings/background',\n  INSERT_DATA: '/settings/insert-data',\n  EDIT_BAR: '/settings/edit-bar',\n  STYLE_BAR: '/settings/style-bar',\n  LEGEND: '/settings/legend',\n};\n\nconst DataPage = () => (\n  <div className=\"DataPage\">\n    <Switch>\n      <Route exact path={settingsRoutes.BACKGROUND} component={InputBackground} />\n      <Route path={settingsRoutes.INSERT_DATA} component={InputData} />\n      <Route path={settingsRoutes.EDIT_BAR} component={EditBarContainer} />\n      <Route path={settingsRoutes.STYLE_BAR} component={InputBar} />\n      <Route path={settingsRoutes.LEGEND} component={Legend} />\n    </Switch>\n  </div>\n);\n\nexport default DataPage;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { settingsRoutes } from '../../pages/DataPage/DataPage';\nimport './NavSet.css';\n\nconst NavSet = () => (\n  <nav className=\"NavSet\">\n    <ul>\n      <li><Link to={settingsRoutes.BACKGROUND}><FormattedMessage id=\"navSetComponent.background\" /></Link></li>\n      <li><Link to={settingsRoutes.INSERT_DATA}><FormattedMessage id=\"navSetComponent.data\" /></Link></li>\n      <li><Link to={settingsRoutes.EDIT_BAR}><FormattedMessage id=\"navSetComponent.editBar\" /></Link></li>\n      <li><Link to={settingsRoutes.STYLE_BAR}><FormattedMessage id=\"navSetComponent.styleBar\" /></Link></li>\n      <li><Link to={settingsRoutes.LEGEND}><FormattedMessage id=\"navSetComponent.subtitle\" /></Link></li>\n    </ul>\n    <Link to=\"/percentage-chart/code\"><button type=\"button\">Concluir</button></Link>\n  </nav>\n);\n\nexport default NavSet;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { GraphicComponent } from 'stylized-graphic-component';\nimport NavSet from '../../components/NavSet/NavSet';\n\nimport './GraphicPage.css';\n\nconst GraphicPage = (props) => {\n  const {\n    data, colors, maxPercent, style,\n  } = props;\n  return (\n    <div className=\"GraphicPage\">\n      <NavSet />\n      <div className=\"graphic\">\n        <GraphicComponent\n          style={style}\n          data={data}\n          maxPercent={maxPercent}\n          colors={colors}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  maxPercent: state.maxPercent,\n});\nexport default connect(mapStateToProps)(GraphicPage);\n","import React from 'react';\nimport DataPage from '../DataPage/DataPage';\nimport GraphicPage from '../GraphicPage/GraphicPage';\nimport './SetPage.css';\n\nfunction SetPage() {\n  return (\n    <div className=\"SetPage\">\n      <DataPage />\n      <GraphicPage />\n    </div>\n  );\n}\n\nexport default SetPage;\n","export const summaryData = [\n  {\n    name: 'data',\n    description: 'inputLabel.summaryData.data',\n  },\n  {\n    name: 'colors',\n    description: 'inputLabel.summaryData.colors',\n  },\n  {\n    name: 'maxPercent',\n    description: 'inputLabel.summaryData.maxPercent',\n  },\n];\n\nexport const summaryStyle = [\n  {\n    name: 'backgrondColor',\n    description: 'inputLabel.summaryStyle.backgrondColor',\n  },\n  {\n    name: 'lineColor',\n    description: 'inputLabel.summaryStyle.lineColor',\n  },\n  {\n    name: 'widthLine',\n    description: 'inputLabel.summaryStyle.widthLine',\n  },\n  {\n    name: 'fontSizeBackground',\n    description: 'inputLabel.summaryStyle.fontSizeBackground',\n  },\n  {\n    name: 'fontBackgorund ',\n    description: 'inputLabel.summaryStyle.fontBackgorund',\n  },\n  {\n    name: 'widthGraph',\n    description: 'inputLabel.summaryStyle.widthGraph',\n  },\n  {\n    name: 'heightGraph',\n    description: 'inputLabel.summaryStyle.heightGraph',\n  },\n  {\n    name: 'WidthBorder',\n    description: 'inputLabel.summaryStyle.WidthBorder',\n  },\n  {\n    name: 'borderColor',\n    description: 'inputLabel.summaryStyle.borderColor',\n  },\n  {\n    name: 'percentSide',\n    description: 'inputLabel.summaryStyle.percentSide',\n  },\n  {\n    name: 'widthBar',\n    description: 'inputLabel.summaryStyle.widthBar',\n  },\n  {\n    name: 'fontSizeBar',\n    description: 'inputLabel.summaryStyle.fontSizeBar',\n  },\n  {\n    name: 'fontBar',\n    description: 'inputLabel.summaryStyle.fontBar',\n  },\n  {\n    name: 'fontColordifBar',\n    description: 'inputLabel.summaryStyle.fontColordifBar',\n  },\n  {\n    name: 'fontColor',\n    description: 'inputLabel.summaryStyle.fontColor',\n  },\n  {\n    name: 'topPercent',\n    description: 'inputLabel.summaryStyle.topPercent',\n  },\n  {\n    name: 'baseName',\n    description: 'inputLabel.summaryStyle.baseName',\n  },\n  {\n    name: 'withLegend',\n    description: 'inputLabel.summaryStyle.withLegend',\n  },\n  {\n    name: 'fonteLegend',\n    description: 'inputLabel.summaryStyle.fonteLegend',\n  },\n  {\n    name: 'fontLegendSize',\n    description: 'inputLabel.summaryStyle.fontLegendSize',\n  },\n  {\n    name: 'colorLegend',\n    description: 'inputLabel.summaryStyle.colorLegend',\n  },\n  {\n    name: 'borderLegend',\n    description: 'inputLabel.summaryStyle.borderLegend',\n  },\n  {\n    name: 'colorBorderLegend',\n    description: 'inputLabel.summaryStyle.colorBorderLegend',\n  },\n  {\n    name: 'legendSide',\n    description: 'inputLabel.summaryStyle.legendSide',\n  },\n  {\n    name: 'legendVertical',\n    description: 'inputLabel.summaryStyle.legendVertical',\n  },\n\n];\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { summaryData, summaryStyle } from '../../data/summaryInfo';\nimport './SummaryPage.css';\n\nconst SummaryPage = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <div className=\"Summary\">\n      <h2><FormattedMessage id=\"common.summary\" /></h2>\n      <h3><FormattedMessage id=\"common.summaryPage.dynamicData\" /></h3>\n      {summaryData.map(({ name, description: id }) => (\n        <div key={name} className=\"item\">\n          <h4>{name}</h4>\n          <p>{formatMessage({ id })}</p>\n        </div>\n      ))}\n      <h3><FormattedMessage id=\"common.summaryPage.styleData\" /></h3>\n      {summaryStyle.map(({ name, description: id }) => (\n        <div key={name} className=\"item\">\n          <h4>{name}</h4>\n          <p>{formatMessage({ id })}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SummaryPage;\n","export const selectLanguages = {\n  menu: (base) => ({\n    ...base,\n    width: '180px',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.6)',\n    padding: 20,\n    position: 'absolute',\n    margin: '0',\n  }),\n\n  menuList: (base) => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '12px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: 'black',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: 'white',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#555',\n    },\n  }),\n\n  dropdownIndicator: (base) => ({\n    ...base,\n    color: 'white',\n  }),\n\n  control: (_, { selectProps: { width } }) => ({\n    width,\n    background: 'rgba(0, 0, 0, 0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: '8px',\n    border: 'solid 1px white',\n    height: '80%',\n  }),\n\n  option: (base) => ({\n    ...base,\n    ':hover': {\n      background: 'linear-gradient(to right,transparent, white, transparent)',\n      color: 'black',\n    },\n    WebkitUserSelect: { backgroundColor: 'black' },\n    background: 'rgba(0, 0, 0, 0.6)',\n  }),\n\n  singleValue: (base) => {\n    const opacity = 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...base,\n      opacity,\n      transition,\n      color: 'white ',\n      background: 'transparent',\n      width: '100%',\n      textAlign: 'center',\n    };\n  },\n};\n\nexport const selectFavorites = {\n  menu: (base) => ({\n    ...base,\n    width: '100%',\n    color: 'white',\n    background: 'rgba(0, 0, 0, 0.6)',\n    padding: 20,\n    position: 'absolute',\n    margin: '0',\n  }),\n\n  menuList: (base) => ({\n    ...base,\n    maxHeight: '180px',\n    '::-webkit-scrollbar': {\n      width: '12px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: 'black',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: 'white',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#555',\n    },\n  }),\n\n  dropdownIndicator: (base) => ({\n    ...base,\n    color: 'white',\n  }),\n\n  indicatorsContainer: (base) => ({\n    ...base,\n    cursor: 'pointer',\n  }),\n\n  indicatorSeparator: (base) => ({\n    ...base,\n    display: 'none',\n  }),\n\n  control: (_, { selectProps: { width } }) => ({\n    width,\n    background: 'rgba(0, 0, 0, 0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: '8px',\n    border: 'solid 1px white',\n    height: '40px',\n  }),\n\n  option: (base) => ({\n    ...base,\n    ':hover': {\n      background: 'linear-gradient(to right,transparent, white, transparent)',\n      color: 'black',\n    },\n    cursor: 'pointer',\n    WebkitUserSelect: { backgroundColor: 'black' },\n    background: 'rgba(0, 0, 0, 0.6)',\n    fontSize: '20px',\n  }),\n\n  singleValue: (base) => {\n    const opacity = 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...base,\n      opacity,\n      transition,\n      display: 'none',\n    };\n  },\n};\n\nexport const placeholderStyle = {\n  color: 'white',\n  fontSize: '30px',\n  display: 'flex',\n  cursor: 'pointer',\n  width: '60%',\n  justifyContent: 'center',\n};\n","import homePT from './pt-BR';\nimport homeEN from './en-US';\n\nexport default {\n  'pt-BR': homePT,\n  'en-US': homeEN,\n};\n","export default {\n  title: 'Essa página tem como finalidade auxiliar na estilização do componente library \"stylized-percentage-chart\"',\n  subtitle: 'Nesta aplicação, você encontrará ferramentas que permitirão estilizar o gráfico:',\n  item1: 'Na guia Estilo de Fundo, estilizar o fundo do seu gráfico;',\n  item2: 'Na guia Inserir Dados, insira dados simulando o que ocorrerá na sua aplização;',\n  item3: 'Na guia Editar Barras, poderá alterar e excluir os dados e trocar a cor das barras;',\n  item4: 'Na guia Estilizar Barras, configure detalhes nos estilo das barras;',\n  item5: 'Na guia Legenda, poderá optar por usar legenda estilizada a seu gosto;',\n};\n","export default {\n  title: 'This application is intended to assist in styling the stylized-percentage-chart library component',\n  subtitle: 'On the page you will find tools that will allow you to style the chart:',\n  item1: 'On the Background tab, style the background of your chart;',\n  item2: 'On the insert tab, insert data simulating what in your application',\n  item3: 'In the Edit Bars tab, you can change and delete the data and change the color of the bars;',\n  item4: 'On the Style Bars tab, configure details on the style of the bars;',\n  item5: 'In the Caption tab, you can choose to use a stylized caption to your liking;',\n};\n","import setPagePT from './pt-BR';\nimport setPageEN from './en-US';\n\nexport default {\n  'pt-BR': setPagePT,\n  'en-US': setPageEN,\n};\n","export default {\n\n};\n","export default {\n\n};\n","import codePagePT from './pt-BR';\nimport codePageEN from './en-US';\n\nexport default {\n  'pt-BR': codePagePT,\n  'en-US': codePageEN,\n};\n","export default {\n  installLib: 'Instale o componente library em sua aplicação',\n  finishing: 'Finalizando',\n  createFile: 'Crie um arquivo, copie e cole o objeto com os dados da estilização, depois o exporte',\n  copied: 'Copiado para a área de tranferência!',\n  version: 'a versão atual é com react 17.0.2, a versão 1.0.5 utiliza a 16.12.0 - ',\n  importProps: 'Importe o componete stylized-percentage-chart e passe os dados do estilo e os dados a ser renderizado como props',\n};\n","export default {\n  installLib: 'Install the library component in your application',\n  finishing: 'Finishing',\n  createFile: 'Create a file, copy and paste the object with the styling data, then export it',\n  copied: 'Copied to clipboard!',\n  version: 'current version is with react 17.0.2, version 1.0.5 uses 16.12.0 - ',\n  importProps: 'Import the stylized-percentage-chart component and pass the style data and the data to be rendered as props',\n};\n","import NavSetPagePT from './pt-BR';\nimport NavSetPageEN from './en-US';\n\nexport default {\n  'pt-BR': NavSetPagePT,\n  'en-US': NavSetPageEN,\n};\n","export default {\n  background: 'Estilo de fundo',\n  data: 'Inserir dados',\n  styleBar: 'Estilo das barras',\n  editBar: 'Editar barras',\n  subtitle: 'Legenda',\n};\n","export default {\n  background: 'Background style',\n  data: 'Insert data',\n  styleBar: 'Bar style',\n  editBar: 'Edit bars',\n  subtitle: 'Subititle',\n};\n","import inputLabelPT from './pt-BR';\nimport inputLabelEN from './en-US';\n\nexport default {\n  'pt-BR': inputLabelPT,\n  'en-US': inputLabelEN,\n};\n","export default {\n  inputBackground: {\n    backgroundColor: 'Cor de fundo:',\n    lineColor: 'Cor da linha:',\n    widthLine: 'Largura da linha:',\n    fontSizeBackground: 'Tamanho da letra:',\n    fontBackground: 'Fonte de fundo:',\n    widthGraph: 'Largura do gráfico:',\n    heightGraph: 'Altura do gráfico:',\n    widthBorder: 'Espessura da borda:',\n    borderColor: 'Cor da borda:',\n    percentSideLeft: 'Esquerdo',\n    percentSideRight: 'Direito',\n  },\n  inputData: {\n    dataName: 'Nome:',\n    qty: 'Quantidade:',\n    color: 'Cor:',\n    insertData: 'Inserir Dados',\n  },\n  inputBar: {\n    fontColordifBar: 'Cor da fonte diferente da barra:',\n    widthBar: 'Largura das barras:',\n    fontSizeBar: 'Tamanho da fonte:',\n    fontBar: 'Fonte da barra:',\n    topPercent: 'Exibir a porcentagem no topo da barra',\n    baseName: 'Exibir o nome na base da barra',\n    fontColor: 'Cor da fonte:',\n  },\n  legend: {\n    fontLegendSize: 'Tamanho da fonte:',\n    fontColorLegend: 'Cor da fonte:',\n    colorLegend: 'Cor de fundo da legenda:',\n    borderLegend: 'Largura da borda:',\n    colorBorderLegend: 'Cor da borda:',\n    legendSideLeft: 'Esquerdo',\n    legendSideRight: 'Direito',\n    legendVerticalTop: 'Superior',\n    legendVerticalLower: 'Inferior',\n    withSub: 'Com legenda',\n  },\n  summaryData: {\n    data: 'O data receberá um objeto onde a chave será o nome de referência ao dado a ser exibido e o valor será o número correspondente ao mesmo. O data fica fora do objeto “style”, pois o mesmo conterá os dados a ser exibido.',\n    colors: 'O colors é um array com as cores exibidas nas barras, sendo a sua ordem seguindo a sequência do objeto data. Caso não seja passada cores o suficiente, as barras terão a cor #aaa e a mesma não será exibida na legenda.',\n    maxPercent: 'O maxPercent pode receber três tipos: 100%, 75% e 50%, sendo esses o máximo de porcentagem a ser exibido no background. O maxPercent não está no objeto style para que caso prefira fazer uma lógica para ser exibido segundo o resultado. Caso não seja passado, ele assumirá o  valor de 100%.',\n  },\n  summaryStyle: {\n    backgrondColor: 'O backgroundColor especifica a a cor de funco do grafico. Caso nenhum valor seja passado assumirá o valor \"white\".',\n    lineColor: 'O lineColor define a cor das linhas de marcação da porcentagem no fundo do gráfico, caso não queira essas linhas, basta colocar a mesma cor que o backgroundColor. Caso nenhum valor seja passado, assumirá o valor \"black\".',\n    widthLine: 'A widthLine determina a espessura da linha que divide a porcentagem no fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de \"1\".',\n    fontSizeBackground: 'O fontSizeBackground informa o tamanho da letra usada para exibir a porcentagem no fundo do gráfico. Caso nenhum valor seja passado, assumirá o valor \"10\".',\n    fontBackgorund: 'A fontBackground determina a font-family usada na porcentagem do fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de \"monospace\".',\n    widthGraph: 'O widthGraph especifica a largura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de \"1000\".',\n    heightGraph: 'heightGraph representa a altura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de \"500\".',\n    WidthBorder: 'O widthBorder representa a espessura da borda do gráfico. Caso nenhum valor seja passado, assumirá o valor de \"1\".',\n    borderColor: 'O borderColor determina a cor da borda do gráfico.Caso nenhum valor seja passado, assumirá o valor de \"black\".',\n    percentSide: 'O percentSide determina o lado onde será exibido a porcentagem, caso nenhum valor seja passado receberá o valor de \"left\".',\n    widthBar: 'A widthBar determina a largura das barras. Caso nenhum valor seja passado receberá o valor de \"60\".',\n    fontSizeBar: 'A fontSizeBar determina o tamanho da letra escrita na base da barra. Caso não seja passado nenhum valor, receberá \"15\".',\n    fontBar: 'A fontBar determina a font-family usada na base da barra. Caso nenhum valor seja passado, assumirá o valor de \"monospace\".',\n    fontColordifBar: 'O fontColordifBar recebe um booleano onde determina se a cor das letras na base da barra terá a mesma cor que a barra, caso não seja acionado a cor será a mesma que as barras.',\n    fontColor: 'Caso opte pela cor das letras serem diferente das barras, poderá escolher a cor através do fontColor, tendo como padrão o valor \"black\".',\n    topPercent: 'Quando acionado o topPercent exibe o valor da porcentagem no topo da barra, sua formatação é a mesma que as letras da base da barra, porém sua exibição é independente.',\n    baseName: 'O baseName determina se será exibido ou não o nome na base da barra. Caso opte por usar legenda pode desativá-lo passando o valor booleano de false.',\n    withLegend: 'O withLegend determina se você vai querer um gráfico com legenda ou não, recebendo o valor booleano de true para sim, tendo como padão o valor false.',\n    fonteLegend: 'O fonteLegend determina o font-family usado na legenda, sendo o padrão \"monospace\".',\n    fontLegendSize: 'O fontColorLegend determina a cor da fonte usada na legenda, sendo o padrão \"black\".',\n    colorLegend: 'O colorLegend determina a cor da  legenda, sendo o padrão \"white\".',\n    borderLegend: 'O borderLegend determina a espessura da borda da legenda. Caso nenhum valor seja passado, receberá \"1\"',\n    colorBorderLegend: 'colorBorderLegend determina a cor da borda da legenda',\n    legendSide: 'O legendSide determina o lado em que a legenda ficará, tendo como padrão \"right\"',\n    legendVertical: 'O legendVertical determina o posicionamento da legenda na vertical, tendo como padrão o \"atop\"',\n  },\n};\n","export default {\n  inputBackground: {\n    backgroundColor: 'Background Color:',\n    lineColor: 'Line color:',\n    widthLine: 'Line width:',\n    fontSizeBackground: 'Font Size:',\n    fontBackground: 'Background font:',\n    widthGraph: 'Graph width:',\n    heightGraph: 'Graph height:',\n    widthBorder: 'Border thickness:',\n    borderColor: 'Border Color:',\n    percentSideLeft: 'Left',\n    percentSideRight: 'Right',\n  },\n  inputData: {\n    dataName: 'Name:',\n    qty: 'Quantity:',\n    color: 'Color:',\n    insertData: 'Inset Data',\n  },\n  inputBar: {\n    fontColordifBar: 'Font color different from bar:',\n    widthBar: 'Bar width:',\n    fontSizeBar: 'Font Size:',\n    fontBar: 'Font bar:',\n    topPercent: 'Display the percentage at the top of the bar',\n    baseName: 'Display name at base of slash',\n    fontColor: 'Font Color:',\n  },\n  legend: {\n    fontLegendSize: 'Font Size:',\n    fontColorLegend: 'Font color:',\n    colorLegend: 'Legend background color:',\n    borderLegend: 'Border width:',\n    colorBorderLegend: 'Border color:',\n    legendSideLeft: 'Left',\n    legendSideRight: 'Right',\n    legendVerticalTop: 'Superior',\n    legendVerticalLower: 'Lower',\n    withSub: 'With subtitle',\n  },\n  summaryData: {\n    data: 'The data will receive an object, where the key will be the name of the reference to the data to be displayed, and the value will be the number corresponding to it. The data is outside the “style” object, as it will contain the data to be displayed.',\n    colors: 'The colors is an array with the colors displayed in the bars, with their order following the sequence of the data object. If not enough colors are passed, the bars will have the color #aaa, and it will not be displayed in the legend.',\n    maxPercent: 'The maxPercent can receive three types: 100%, 75% and 50%, these being the maximum percentage to be displayed in the background. The maxPercent is not in the style object, so in case you prefer to make a logic to be displayed according to the result. If not passed, it will assume the value of 100%.',\n  },\n  summaryStyle: {\n    backgrondColor: 'The backgroundColor specifies the background color of the graph. If no value is passed, it will assume the value \"white\".',\n    lineColor: 'The lineColor defines the color of the lines marking the percentage on the background of the graph, if you don\\'t want these lines, just put the same color as the backgroundColor. If no value is passed, it will assume the value \"black\".',\n    widthLine: 'The widthLine determines the thickness of the line that divides the percentage at the bottom of the graph. If no value is passed, it will assume the value of \"1\".',\n    fontSizeBackground: 'The fontSizeBackground informs the size of the font used to display the percentage on the background of the graph. If no value is passed, it will assume the value \"10\".',\n    fontBackgorund: 'The fontBackground determines the font-family used in the graph background percentage. If no value is passed, it will assume the value of \"monospace\".',\n    widthGraph: 'The widthGraph specifies the width in graph size. If no value is passed, it will assume the value of \"1000\".',\n    heightGraph: 'heightGraph represents the height in graph size. If no value is passed, it will assume the value of \"500\".',\n    WidthBorder: 'The widthBorder represents the thickness of the graphic\\'s border. If no value is passed, it will assume the value of \"1\".',\n    borderColor: 'The borderColor determines the color of the graphic\\'s border. If no value is passed, it will assume the value of \"black\".',\n    percentSide: 'The percentSide determines the side where the percentage will be displayed, if no value is passed it will receive the value of \"left\".',\n    widthBar: 'The widthBar determines the width of the bars. If no value is passed, it will receive the value of \"60\".',\n    fontSizeBar: 'The fontSizeBar determines the size of the letter written at the bottom of the bar. If no value is passed, you will receive \"15\".',\n    fontBar: 'The fontBar determines the font-family used at the base of the bar. If no value is passed, it will assume the value of \"monospace\".',\n    fontColordifBar: 'The fontColordifBar receives a boolean which determines whether the color of the letters at the base of the bar will have the same color as the bar, if not activated, the color will be the same as the bars.',\n    fontColor: 'If you choose the color of the letters to differ from the bars, you can choose the color through fontColor, with the default value \"black\".',\n    topPercent: 'When activated the topPercent displays the percentage value at the top of the bar, its formatting is the same as the letters at the bottom of the bar, but its display is independent.',\n    baseName: 'The baseName determines whether to display the name at the base of the bar. If you choose to use caption, you can disable it by passing the boolean value of false.',\n    withLegend: 'WithLegend determines whether you want a graph with legend or not, getting a boolean value from true to yes, with a default value of false.',\n    fontLegend: 'The fontLegend determines the font-family used in the legend, the default being \"monospace\".',\n    fontLegendSize: 'The fontColorLegend determines the font color used in the legend, the default being \"black\".',\n    colorLegend: 'The colorLegend determines the color of the legend, the default being \"white\".',\n    borderLegend: 'The borderLegend determines the thickness of the legend\\'s border. If no value is passed, it will receive \"1\"',\n    colorBorderLegend: 'colorBorderLegend determines the color of the legend\\'s border',\n    legendSide: 'The legendSide determines which side the legend will be on, defaulting to \"right\"',\n    legendVertical: 'The legendVertical determines the position of the legend vertically, defaulting to \"atop\"',\n  },\n};\n","import messages from './messages';\n\nexport default messages;\n","import { common as commonPT } from '../messages/pt-BR';\nimport { common as commonEN } from '../messages/en-US';\nimport {\n  home, setPage, codePage, navSetComponent, inputLabel,\n} from '../messages';\n\nexport default {\n  'pt-BR': {\n    common: commonPT,\n    home: home['pt-BR'],\n    setPage: setPage['pt-BR'],\n    codePage: codePage['pt-BR'],\n    navSetComponent: navSetComponent['pt-BR'],\n    inputLabel: inputLabel['pt-BR'],\n  },\n  'en-US': {\n    common: commonEN,\n    home: home['en-US'],\n    setPage: setPage['en-US'],\n    codePage: codePage['en-US'],\n    navSetComponent: navSetComponent['en-US'],\n    inputLabel: inputLabel['en-US'],\n  },\n};\n","export default {\n  home: 'Início',\n  styleChart: 'Estilizar Gráfico',\n  styleCode: 'Código do Estilo',\n  summary: 'Sumário',\n  summaryPage: {\n    dynamicData: 'Dados dinâmicos',\n    styleData: 'Dados do estilo',\n  },\n};\n","export default {\n  home: 'Home',\n  styleChart: 'Style Chart',\n  styleCode: 'Style Code',\n  summary: 'Summary',\n  summaryPage: {\n    dynamicData: 'Dynamic data',\n    styleData: 'Style data',\n  },\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select from 'react-select';\nimport { selectLanguages } from '../../constants/selectStyles';\nimport messages from '../../locales/languages';\nimport { actionLanguage } from '../../redux/actions';\nimport './style.css';\n\nconst SelectLanguage = () => {\n  const dispatch = useDispatch();\n  const setLanguage = (value) => { dispatch(actionLanguage(value)); };\n  const options = Object.keys(messages)\n    .map((tag) => ({ value: tag, label: tag, code: tag.split('-')[1] }));\n  return (\n    <div className=\"SelectLanguage\">\n      <Select\n        defaultValue={options[0]}\n        styles={selectLanguages}\n        width=\"200px\"\n        options={options}\n        onChange={({ value }) => setLanguage(value)}\n        getOptionLabel={(e) => (\n          <div>\n            <span style={{ marginRight: 10 }}>{e.label}</span>\n            <img src={`https://flagcdn.com/${e.code.toLowerCase()}.svg`} alt=\"flag\" width=\"20px\" />\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default SelectLanguage;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { DiNpm, DiGithubBadge } from 'react-icons/di';\nimport { FormattedMessage } from 'react-intl';\nimport CodePage from './pages/CodePage/CodePage';\nimport Home from './pages/Home/Home';\nimport SetPage from './pages/SetPage/SetPage';\nimport SummaryPage from './pages/SummaryPage.jsx/SummaryPage';\nimport SelectLanguage from './components/SelectLanguage';\nimport { settingsRoutes } from './pages/DataPage/DataPage';\n\nconst routes = {\n  HOME: '/',\n  SETTINGS: '/settings/*',\n  CODE: '/code',\n  SUMMARY: '/summary',\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav id=\"nav-app\">\n        <div style={{ color: 'white', fontSize: '75px' }}>\n          <a href=\"https://github.com/Gonzagadavid/percentage-chart\" target=\"_blank\" rel=\"noreferrer\"><DiGithubBadge /></a>\n          <a href=\"https://www.npmjs.com/package/stylized-graphic-component\" target=\"_blank\" rel=\"noreferrer\"><DiNpm /></a>\n        </div>\n        <Link to={routes.HOME}><FormattedMessage id=\"common.home\" /></Link>\n        <Link to={settingsRoutes.BACKGROUND}><FormattedMessage id=\"common.styleChart\" /></Link>\n        <Link to={routes.CODE}><FormattedMessage id=\"common.styleCode\" /></Link>\n        <Link to={routes.SUMMARY}><FormattedMessage id=\"common.summary\" /></Link>\n        <div>\n          <SelectLanguage />\n        </div>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path={routes.HOME} component={Home} />\n          <Route path={routes.SETTINGS} component={SetPage} />\n          <Route path={routes.CODE} component={CodePage} />\n          <Route path={routes.SUMMARY} component={SummaryPage} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_BACKGROUND, ADD_COLOR, ADD_DATA, ADD_LEGEND,\n  ADD_STYLEBAR, EDIT_COLOR, EDIT_QTY, LANGUAGE, REMOVE_DATA,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  data: { Acertos: 4, Erros: 3 },\n  colors: ['#2e9e3b', '#862323'],\n  maxPercent: '100%',\n  widthGraph: '1000',\n  widthBorder: '3',\n  heightGraph: '500',\n  backgroundColor: '#191736',\n  lineColor: '#407991',\n  fontSizeBackground: '25',\n  percentSide: 'left',\n  widthLine: '1',\n  fontBackground: 'comic',\n  widthBar: '102',\n  fontSizeBar: '15',\n  fontBar: 'monospace',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: false,\n  withLegend: true,\n  fontLegend: 'monospace',\n  fontLegendSize: '23',\n  fontColorLegend: '#191740',\n  colorLegend: '#407991',\n  borderLegend: '8',\n  colorBorderLegend: '#191740',\n  baseName: false,\n  legendSide: 'right',\n  legendVertical: 'atop',\n  borderColor: '#407991',\n  locale: 'pt-BR',\n};\n\nconst reducerData = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return { ...state, data: { ...state.data, ...action.state } };\n\n    case ADD_COLOR:\n      return { ...state, colors: [...state.colors, action.state] };\n\n    case ADD_BACKGROUND:\n      document.body.style.width = `${+action.state.widthGraph + 500}px`;\n      return { ...state, ...action.state };\n\n    case ADD_STYLEBAR:\n      return { ...state, ...action.state };\n\n    case ADD_LEGEND:\n      return { ...state, ...action.state };\n\n    case REMOVE_DATA:\n      return {\n        ...state,\n        data: Object\n          .keys(state.data)\n          .filter((key) => key !== action.state.name)\n          .reduce((newState, name) => ({ ...newState, [name]: state.data[name] }), {}),\n        colors: state.colors.filter((color) => color !== action.state.color),\n      };\n\n    case EDIT_COLOR:\n      return {\n        ...state,\n        colors: state\n          .colors\n          .map((color, index) => (index === action.state.index ? action.state.color : color)),\n      };\n\n    case EDIT_QTY:\n      return {\n        ...state,\n        data: { ...state.data, [action.state.name]: action.state.qty },\n      };\n\n    case LANGUAGE:\n      return { ...state, locale: action.state };\n\n    default: return state;\n  }\n};\n\nexport default reducerData;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducerData from './reducers';\n\nconst store = createStore(reducerData, composeWithDevTools());\n\nexport default store;\n","import React, { Fragment } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { flatten } from 'flat';\nimport messages from './languages';\n\nconst LocaleProvider = ({ children }) => {\n  const { locale } = useSelector((state) => state);\n  return (\n    <IntlProvider\n      textComponent={Fragment}\n      locale={locale}\n      messages={flatten(messages[locale])}\n    >\n      {children}\n    </IntlProvider>\n  );\n};\nexport default LocaleProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux';\nimport LocaleProvider from './locales';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <LocaleProvider>\n        <App />\n      </LocaleProvider>\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}