{"version":3,"sources":["pages/CodePage/CodePage.jsx","pages/Home/Home.jsx","redux/actions/index.js","components/EditBar/EditBar.jsx","components/InputsContainer/EditBarContainer.jsx","components/Input/Input.jsx","components/Select/Select.jsx","components/InputsContainer/InputBackground.jsx","components/InputsContainer/InputBar.jsx","components/InputsContainer/InputData.jsx","components/InputsContainer/Lengend.jsx","pages/DataPage/DataPage.jsx","components/CanvasGraffic.jsx","components/NavSet/NavSet.jsx","pages/GraphicPage/GraphicPage.jsx","pages/SetPage/SetPage.jsx","data/summaryInfo.js","pages/SummaryPage.jsx/SummaryPage.jsx","App.jsx","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["connect","state","style","data","colors","widthGraph","heightGraph","widthBorder","backgroundColor","lineColor","fontSizeBackground","percentSide","widthLine","fontBackground","maxPercent","widthBar","fontSizeBar","fontBar","fontColorBlack","fontColor","topPercent","withLegend","fontLegend","fontLegendSize","fontColorLegend","colorLegend","borderLegend","colorBorderLegend","baseName","legendSide","legendVertical","borderColor","objectCode","useRef","npm","copyToClip","ref","tempInput","document","createElement","value","current","innerHTML","body","appendChild","select","execCommand","removeChild","queryCommandSupported","className","type","onClick","Home","to","ADD_DATA","ADD_COLOR","ADD_BACKGROUND","ADD_STYLEBAR","ADD_LEGEND","REMOVE_DATA","EDIT_COLOR","EDIT_QTY","EditBar","text","color","changeColor","qty","changeQty","remove","onChange","dispatch","removeData","actionRemoveData","editColor","actionEditColor","editQty","actionEditQty","names","Object","keys","map","name","index","target","Input","props","labelText","change","checked","htmlFor","id","defaultProps","Select","options","option","InputBackground","handlerChange","bind","insertBackground","this","setState","addBackground","Component","actionAddBackground","InputBar","fontColordifBar","insertStyleBar","valueInput","addStyleBar","actionAddStyleBar","InputData","dataName","insertData","addData","addColor","actionAddData","actionAddColor","Legend","insertLegenda","addLegend","actionAddLegend","DataPage","path","component","EditBarContainer","INITIAL_STATE","CanvasGraffic","canvasRef","createRef","legendCreate","drawbackgound","drawBars","clearCanvas","canvas","getContext","clearRect","width","height","sidePercent","percent","context","largeCent","pass","cents","Array","fill","forEach","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","fillStyle","font","fillText","fontSize","fontType","total","values","reduce","sum","crr","initBar","x","length","i","percents","toFixed","fillRect","legendWith","Math","max","val","legendHeight","xInit","yInit","marginX","marginY","textInitX","textY","dataText","border","NavSet","SetPage","summaryData","description","summaryStyle","SummaryPage","App","exact","CodePage","reducerData","action","filter","key","newState","store","createStore","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2e7cb9c7.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport './CodePage.css';\nimport Highlight from 'react-highlight';\n\nconst CodePage = ({\n  heightGraph, widthGraph, backgroundColor, lineColor, fontBar, fontSizeBackground,\n  widthLine, fontBackground, percentSide, widthBar, fontSizeBar,\n  fontColorBlack, fontColor, topPercent, withLegend, fontLegend, fontLegendSize, colorLegend,\n  borderLegend, colorBorderLegend, fontColorLegend, baseName, legendSide, legendVertical,\n  widthBorder, borderColor,\n}) => {\n  const objectCode = useRef(null);\n  const npm = useRef(null);\n\n  const copyToClip = (ref) => {\n    const tempInput = document.createElement('textarea');\n    tempInput.value = ref.current.innerHTML;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempInput);\n  };\n\n  return (document.queryCommandSupported('copy')\n    && (\n    <div className=\"CodePage\">\n      <h2>Finalizando</h2>\n      <p>Crie um arquivo, copie e cole o objeto com os dados da estilização, depois o exporte</p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(objectCode)}>Copy</button>\n        <Highlight className=\"language-javascript\">\n          <p ref={objectCode}>\n            {\n            `//style.js\n            \nconst style = { \n  widthGraph: '${widthGraph}',\n  widthBorder: '${widthBorder}',\n  heightGraph: '${heightGraph}',\n  backgroundColor: '${backgroundColor}',\n  lineColor: '${lineColor}',\n  fontSizeBackground: '${fontSizeBackground}',\n  percentSide: '${percentSide}',\n  widthLine: '${widthLine}',\n  fontBackground: '${fontBackground}',\n  widthBar: '${widthBar}',\n  fontSizeBar: '${fontSizeBar}',\n  fontBar: '${fontBar}',\n  fontColorBlack: '${fontColorBlack}',\n  fontColor: '${fontColor}',\n  topPercent: '${topPercent}',\n  withLegend: '${withLegend}',\n  fontLegend: '${fontLegend}',\n  fontLegendSize: '${fontLegendSize}',\n  fontColorLegend: '${fontColorLegend}',\n  colorLegend: '${colorLegend}',\n  borderLegend: '${borderLegend}',\n  colorBorderLegend: '${colorBorderLegend}',\n  baseName: '${baseName}',\n  legendSide: '${legendSide}',\n  legendVertical: '${legendVertical}',\n  borderColor: '${borderColor}',\n}\n\nexport default style\n`\n}\n          </p>\n        </Highlight>\n      </div>\n      <p>Instale o componente libary em sua aplicação</p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(npm)}>Copy</button>\n        <Highlight className=\"language-shell\">\n          <p ref={npm}>\n            npm install\n          </p>\n        </Highlight>\n      </div>\n    </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  widthGraph: state.widthGraph,\n  heightGraph: state.heightGraph,\n  widthBorder: state.widthBorder,\n  backgroundColor: state.backgroundColor,\n  lineColor: state.lineColor,\n  fontSizeBackground: state.fontSizeBackground,\n  percentSide: state.percentSide,\n  widthLine: state.widthLine,\n  fontBackground: state.fontBackground,\n  maxPercent: state.maxPercent,\n  widthBar: state.widthBar,\n  fontSizeBar: state.fontSizeBar,\n  fontBar: state.fontBar,\n  fontColorBlack: state.fontColorBlack,\n  fontColor: state.fontColor,\n  topPercent: state.topPercent,\n  withLegend: state.withLegend,\n  fontLegend: state.fontLegend,\n  fontLegendSize: state.fontLegendSize,\n  fontColorLegend: state.fontColorLegend,\n  colorLegend: state.colorLegend,\n  borderLegend: state.borderLegend,\n  colorBorderLegend: state.colorBorderLegend,\n  baseName: state.baseName,\n  legendSide: state.legendSide,\n  legendVertical: state.legendVertical,\n  borderColor: state.borderColor,\n});\nexport default connect(mapStateToProps)(CodePage);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"Home\">\n    <h1>Stylized percentage chart</h1>\n    <p>\n      Essa página tem como finalidade auxiliar na estilização do componente\n      libary stylized-percentage-chart\n    </p>\n    <p>Na página Estilizar gráfico encontrar ferramentas que permitirá que estilize o gráfico:</p>\n    <ul>\n      <li>Na guia Backgroud, estilizar o fundo do seu gráfico;</li>\n      <li>Na guia Inserir Dados, insira dados simulando o que ocorrerá na sua aplização;</li>\n      <li>Na guia Editar Barras, poderá alterar e excluir os dados e trocar a cor das barras;</li>\n      <li>Na guia Estilizar Barras, configure detalhes nos estilo das barras;</li>\n      <li>Na guia Legenda, poderá optar por usar legenda estilizada a seu gosto;</li>\n      <p>Para visualizar as alterações clique em aplicar;</p>\n    </ul>\n    <Link to=\"/settings\">Inicar</Link>\n  </div>\n);\n\nexport default Home;\n","export const ADD_DATA = 'ADD_DATA';\nexport const ADD_COLOR = 'ADD_COLOR';\nexport const ADD_BACKGROUND = 'ADD_BACKGROUND';\nexport const ADD_STYLEBAR = 'ADD_STYLEBAR';\nexport const ADD_LEGEND = 'ADD_LEGEND';\nexport const REMOVE_DATA = 'REMOVE_DATA';\nexport const EDIT_COLOR = 'EDIT_COLOR';\nexport const EDIT_QTY = 'EDIT_QTY';\n\nexport const actionAddData = (state) => ({ type: ADD_DATA, state });\n\nexport const actionAddColor = (state) => ({ type: ADD_COLOR, state });\n\nexport const actionAddBackground = (state) => ({ type: ADD_BACKGROUND, state });\n\nexport const actionAddStyleBar = (state) => ({ type: ADD_STYLEBAR, state });\n\nexport const actionAddLegend = (state) => ({ type: ADD_LEGEND, state });\n\nexport const actionRemoveData = (state) => ({ type: REMOVE_DATA, state });\n\nexport const actionEditColor = (state) => ({ type: EDIT_COLOR, state });\n\nexport const actionEditQty = (state) => ({ type: EDIT_QTY, state });\n","import React from 'react';\nimport './Editar.css';\n\nconst EditBar = ({\n  text, color, changeColor, qty, changeQty, remove,\n}) => (\n  <div className=\"EditBar\">\n    <span>{text}</span>\n    <input type=\"color\" value={color} onChange={changeColor} />\n    <input type=\"number\" value={qty} onChange={changeQty} />\n    <button type=\"button\" onClick={remove}>Remove</button>\n  </div>\n);\n\nexport default EditBar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actionEditColor, actionEditQty, actionRemoveData } from '../../redux/actions';\nimport EditBar from '../EditBar/EditBar';\nimport './InputContainer.css';\n\nconst EditBarContainer = ({\n  data, colors, removeData, editColor, editQty,\n}) => {\n  const names = Object.keys(data);\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Editar Barras</h3>\n      {names.map((name, index) => (\n        <EditBar\n          text={name}\n          key={name}\n          color={colors[index]}\n          qty={data[name]}\n          remove={() => removeData({ name, color: colors[index] })}\n          changeColor={({ target: { value } }) => editColor({ index, color: value })}\n          changeQty={({ target: { value } }) => editQty({ name, qty: value })}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  colors: state.colors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeData: (state) => dispatch(actionRemoveData(state)),\n  editColor: (state) => dispatch(actionEditColor(state)),\n  editQty: (state) => dispatch(actionEditQty(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBarContainer);\n","import {\n  bool,\n  func, string, number, oneOfType,\n} from 'prop-types';\nimport './Input.css';\n\nimport React from 'react';\n\nconst Input = (props) => {\n  const {\n    labelText, value, change, type, name, checked,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Input\">\n      {type !== 'radio' && type !== 'checkbox' ? labelText : ''}\n      <input\n        type={type}\n        id={name}\n        value={value}\n        checked={checked}\n        onChange={change}\n        name={name}\n      />\n      {type === 'radio' || type === 'checkbox' ? labelText : ''}\n    </label>\n  );\n};\n\nInput.propTypes = {\n  labelText: string.isRequired,\n  value: oneOfType([number, string, bool]),\n  change: func.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n};\n\nInput.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Input;\n","import { func, string, arrayOf } from 'prop-types';\nimport React from 'react';\nimport './Select.css';\n\nconst Select = (props) => {\n  const {\n    labelText, value, change, name, options,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Select\">\n      {labelText}\n      <select\n        id={name}\n        value={value}\n        onChange={change}\n        name={name}\n      >\n        {\n          options.map((option) => <option key={option}>{option}</option>)\n        }\n      </select>\n    </label>\n  );\n};\n\nSelect.propTypes = {\n  labelText: string.isRequired,\n  value: string,\n  change: func.isRequired,\n  name: string.isRequired,\n  options: arrayOf(string).isRequired,\n};\n\nSelect.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddBackground } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport Select from '../Select/Select';\nimport './InputContainer.css';\n\nclass InputBackground extends Component {\n  constructor() {\n    super();\n    this.state = {\n      backgroundColor: '#fff',\n      lineColor: '#000',\n      fontSizeBackground: '10',\n      fontBackground: 'monospace',\n      widthGraph: '1000',\n      heightGraph: '500',\n      widthLine: '1',\n      maxPercent: '100%',\n      percentSide: 'left',\n      widthBorder: '1',\n      borderColor: 'black',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertBackground = this.insertBackground.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  insertBackground() {\n    const { addBackground } = this.props;\n    addBackground({ ...this.state });\n  }\n\n  render() {\n    const {\n      backgroundColor, lineColor, fontSizeBackground, widthGraph, heightGraph,\n      widthLine, fontBackground, maxPercent, widthBorder, borderColor,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Estilo Background</h3>\n        <Input type=\"color\" name=\"backgroundColor\" labelText=\"Cor de fundo:\" value={backgroundColor} change={this.handlerChange} />\n        <Input type=\"color\" name=\"lineColor\" labelText=\"Cor da linha:\" value={lineColor} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthLine\" labelText=\"Largura da linha:\" value={widthLine} change={this.handlerChange} />\n        <Input type=\"number\" name=\"fontSizeBackground\" labelText=\"Tamanho da letra:\" value={fontSizeBackground} change={this.handlerChange} />\n        <Input type=\"text\" name=\"fontBackground\" labelText=\"Fonte de fundo:\" value={fontBackground} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthGraph\" labelText=\"Largura do grafico:\" value={widthGraph} change={this.handlerChange} />\n        <Input type=\"number\" name=\"heightGraph\" labelText=\"Altura do grafico:\" value={heightGraph} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthBorder\" labelText=\"Espessura da borda:\" value={widthBorder} change={this.handlerChange} />\n        <Input type=\"color\" name=\"borderColor\" labelText=\"Cor da borda:\" value={borderColor} change={this.handlerChange} />\n        <Input type=\"radio\" name=\"percentSide\" labelText=\"Esquerdo\" value=\"left\" change={this.handlerChange} />\n        <Input type=\"radio\" name=\"percentSide\" labelText=\"Direito\" value=\"right\" change={this.handlerChange} />\n        <Select\n          name=\"maxPercent\"\n          labelText=\"Porcetagem a ser exibida:\"\n          value={maxPercent}\n          change={this.handlerChange}\n          options={['100%', '70%', '50%']}\n        />\n        <button type=\"button\" onClick={this.insertBackground}>Aplicar</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBackground: (state) => dispatch(actionAddBackground(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputBackground);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddStyleBar } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass InputBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      widthBar: '60',\n      fontSizeBar: '15',\n      fontColordifBar: false,\n      fontColor: 'black',\n      fontBar: 'monospace',\n      topPercent: false,\n      baseName: true,\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertStyleBar = this.insertStyleBar.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    this.setState({ [name]: valueInput });\n  }\n\n  insertStyleBar() {\n    const { addStyleBar } = this.props;\n    addStyleBar({ ...this.state });\n  }\n\n  render() {\n    const {\n      widthBar, fontSizeBar, fontColordifBar, fontColor, topPercent, fontBar, baseName,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Estilo das Barras</h3>\n        <Input\n          type=\"number\"\n          name=\"widthBar\"\n          labelText=\"Largura das barras:\"\n          value={widthBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"number\"\n          name=\"fontSizeBar\"\n          labelText=\"Tamanho da fonte:\"\n          value={fontSizeBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"text\"\n          name=\"fontBar\"\n          labelText=\"Fonte da barra:\"\n          value={fontBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"checkbox\"\n          name=\"fontColorBlack\"\n          labelText=\"Cor da fonte diferente da barra:\"\n          checked={fontColordifBar}\n          change={this.handlerChange}\n        />\n        {\n         fontColordifBar\n        && (\n        <Input\n          type=\"color\"\n          name=\"fontColor\"\n          labelText=\"Cor da fonte:\"\n          value={fontColor}\n          change={this.handlerChange}\n        />\n        )\n        }\n        <Input\n          type=\"checkbox\"\n          name=\"topPercent\"\n          labelText=\"Exibir a porcentagem no topo da barra:\"\n          checked={topPercent}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"checkbox\"\n          name=\"baseName\"\n          labelText=\"Exibir o nome na base da barra:\"\n          checked={baseName}\n          change={this.handlerChange}\n        />\n        <button type=\"button\" onClick={this.insertStyleBar}>Aplicar</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addStyleBar: (state) => dispatch(actionAddStyleBar(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddColor, actionAddData } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass InputData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataName: '',\n      qty: 0,\n      color: 'black',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertData = this.insertData.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  insertData() {\n    const { addData, addColor } = this.props;\n    const { dataName, qty, color } = this.state;\n    addData({ [dataName]: qty });\n    addColor(color);\n    this.setState({ dataName: '', qty: 0, color: '' });\n  }\n\n  render() {\n    const { dataName, qty, color } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Inserir Dados</h3>\n        <Input type=\"text\" name=\"dataName\" labelText=\"Nome:\" value={dataName} change={this.handlerChange} />\n        <Input type=\"number\" name=\"qty\" labelText=\"Quantidade:\" value={qty} change={this.handlerChange} />\n        <Input type=\"color\" name=\"color\" value={color} labelText=\"Cor:\" change={this.handlerChange} />\n        <button type=\"button\" onClick={this.insertData}>Inserir Dado</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addData: (state) => dispatch(actionAddData(state)),\n  addColor: (state) => dispatch(actionAddColor(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputData);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddLegend } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass Legend extends Component {\n  constructor() {\n    super();\n    this.state = {\n      withLegend: false,\n      fontLegend: 'monospace',\n      fontLegendSize: '20',\n      fontColorLegend: 'black',\n      colorLegend: '#fff',\n      borderLegend: 1,\n      colorBorderLegend: 'black',\n      legendSide: 'right',\n      legendVertical: 'atop',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertLegenda = this.insertLegenda.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    this.setState({ [name]: valueInput }, () => {\n      if (name === 'withLegend') this.insertLegenda();\n    });\n  }\n\n  insertLegenda() {\n    const { addLegend } = this.props;\n    addLegend({ ...this.state });\n  }\n\n  render() {\n    const {\n      withLegend, fontLegend, fontLegendSize, colorLegend, borderLegend, colorBorderLegend,\n      fontColorLegend,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Legenda</h3>\n        <Input type=\"checkbox\" name=\"withLegend\" labelText=\"Com legenda\" checked={withLegend} change={this.handlerChange} />\n        { withLegend\n        && (\n          <>\n            <Input type=\"text\" name=\"fontLegend\" labelText=\"Fonte da legenda:\" value={fontLegend} change={this.handlerChange} />\n            <Input\n              type=\"number\"\n              name=\"fontLegendSize\"\n              labelText=\"Tamanho da fonte:\"\n              value={fontLegendSize}\n              change={this.handlerChange}\n            />\n            <Input type=\"color\" name=\"fontColorLegend\" labelText=\"Cor da fonte:\" value={fontColorLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorLegend\" labelText=\"Cor de fundo da legenda:\" value={colorLegend} change={this.handlerChange} />\n            <Input type=\"number\" name=\"borderLegend\" labelText=\"Largura da borda:\" value={borderLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorBorderLegend\" labelText=\"Cor da borda:\" value={colorBorderLegend} change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Esquerdo\" value=\"left\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Direito\" value=\"right\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Superior\" value=\"atop\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Inferior\" value=\"bottom\" change={this.handlerChange} />\n          </>\n        )}\n        <button type=\"button\" onClick={this.insertLegenda}>Aplicar</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => ({\n  addLegend: (state) => dispatch(actionAddLegend(state)),\n});\n\nexport default connect(null, mapDispacthToProps)(Legend);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport EditBarContainer from '../../components/InputsContainer/EditBarContainer';\nimport InputBackground from '../../components/InputsContainer/InputBackground';\nimport InputBar from '../../components/InputsContainer/InputBar';\nimport InputData from '../../components/InputsContainer/InputData';\nimport Legend from '../../components/InputsContainer/Lengend';\nimport './DataPage.css';\n\nconst DataPage = () => (\n  <div className=\"DataPage\">\n    <Switch>\n      <Route path=\"/percentage-chart/settings/background\" component={InputBackground} />\n      <Route path=\"/percentage-chart/settings/insert-data\" component={InputData} />\n      <Route path=\"/percentage-chart/settings/edit-bar\" component={EditBarContainer} />\n      <Route path=\"/percentage-chart/settings/style-bar\" component={InputBar} />\n      <Route path=\"/percentage-chart/settings/legend\" component={Legend} />\n    </Switch>\n  </div>\n);\n\nexport default DataPage;\n","import React, { Component, createRef } from 'react';\n\nconst INITIAL_STATE = {\n  data: {},\n  colors: [],\n  backgroundColor: 'white',\n  lineColor: 'black',\n  fontSizeBackground: '10',\n  widthGraph: '1000',\n  heightGraph: '500',\n  widthBorder: '1',\n  borderColor: 'black',\n  widthLine: '1',\n  fontBackground: 'monospace',\n  maxPercent: '100%',\n  percentSide: 'left',\n  widthBar: '60',\n  fontSizeBar: '15',\n  fontBar: 'monospace',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: false,\n  baseName: true,\n  withLegend: false,\n  fontLegend: 'monospace',\n  fontLegendSize: '20',\n  fontColorLegend: 'black',\n  colorLegend: 'white',\n  borderLegend: 1,\n  colorBorderLegend: 'black',\n  legendSide: 'right',\n  legendVertical: 'atop',\n};\n\nclass CanvasGraffic extends Component {\n  constructor() {\n    super();\n    this.canvasRef = createRef();\n    this.legendCreate = this.legendCreate.bind(this);\n    this.drawbackgound = this.drawbackgound.bind(this);\n    this.drawBars = this.drawBars.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentDidMount() {\n    this.drawbackgound();\n  }\n\n  componentDidUpdate() {\n    this.clearCanvas();\n    this.drawbackgound();\n  }\n\n  clearCanvas() {\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  drawbackgound() {\n    const {\n      style: {\n        widthGraph = '1000', heightGraph = '500', lineColor = 'black', fontSizeBackground = '10', widthLine = '1',\n        fontBackground = 'monospace', percentSide = 'left',\n      } = INITIAL_STATE, maxPercent = '100%',\n    } = this.props;\n    const sidePercent = percentSide === 'right' ? widthGraph - (fontSizeBackground * 4) : 10;\n    const percent = maxPercent === '70%' ? 8 : maxPercent === '50%' ? 6 : 11;\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    const largeCent = heightGraph / (percent + 1);\n    let pass = heightGraph - largeCent;\n    let cents = 0;\n    Array(percent).fill(0).forEach(() => {\n      context.beginPath();\n      context.strokeStyle = lineColor;\n      context.lineWidth = widthLine;\n      context.moveTo(0, pass);\n      context.lineTo(widthGraph, pass);\n      context.stroke();\n      context.closePath();\n      context.fillStyle = lineColor;\n      context.font = `${fontSizeBackground}px ${fontBackground}`;\n      context.fillText(`${cents}%`, sidePercent, pass - (widthLine * 2));\n      pass -= largeCent;\n      cents += 10;\n    });\n    this.drawBars();\n  }\n\n  drawBars() {\n    const {\n      style: {\n        widthBar = '60', widthGraph = '1000', heightGraph = '500', fontSizeBar = '15', fontBar = 'monospace', maxPercent = '100%',\n        fontColordifBar = false, fontColor = 'black', topPercent = false, withLegend = false, baseName = true,\n      } = INITIAL_STATE, data = {}, colors = [],\n    } = this.props;\n    const canvas = this.canvasRef.current;\n    const fontSize = +fontSizeBar || 20;\n    const fontType = fontBar || 'serif';\n    const percent = maxPercent === '70%' ? 8 : maxPercent === '50%' ? 6 : 11;\n    const largeCent = heightGraph / (percent + 1);\n    const context = canvas.getContext('2d');\n    const keys = Object.keys(data);\n    const total = Object.values(data).reduce((sum, crr) => sum + +crr, 0);\n    const initBar = heightGraph - (heightGraph / (percent + 1));\n    const pass = +widthBar / 2;\n    const positionInt = (widthGraph / 2) - ((keys.length / 2) * (+widthBar + pass));\n    let x = positionInt;\n\n    keys.forEach((name, i) => {\n      context.font = `${fontSize}px ${fontType}`;\n      const percents = `${((+data[name] * 100) / total).toFixed(1)}%`;\n      const cents = ((+data[name] * (10 * largeCent)) / total);\n      context.fillStyle = colors[i] || '#aaa';\n      context.fillRect(x, initBar, +widthBar, -cents);\n      if (fontColordifBar) context.fillStyle = fontColor || 'black';\n      if (baseName) context.fillText(name, x + (widthBar / 8), initBar + fontSize);\n      if (topPercent) {\n        context.fillText(percents, x + (widthBar / 4), initBar - cents - (fontSizeBar / 2));\n      }\n      x += (pass + +widthBar);\n    });\n    if (withLegend) this.legendCreate();\n  }\n\n  legendCreate() {\n    const {\n      style: {\n        fontLegendSize = '20', borderLegend = '1', colorBorderLegend = 'black', colorLegend = 'white',\n        fontLegend = 'monospace', widthGraph = '1000', fontColorLegend = 'black', legendSide = 'right',\n        legendVertical = 'atop', heightGraph = '500',\n      } = INITIAL_STATE, data = {}, colors = [],\n    } = this.props;\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n    const maxLength = Math.max(...Object.keys(data).map((val) => val.length)) * +fontLegendSize;\n    const legendWith = maxLength + (+fontLegendSize * 5);\n    const line = (+fontLegendSize + +fontLegendSize / 2);\n    const legendHeight = (line * Object.keys(data).length) + (+fontLegendSize * 2);\n    const xInit = legendSide === 'right' ? widthGraph - (legendWith + 10) : 10;\n    const yInit = legendVertical === 'atop' ? 10 : heightGraph - (legendHeight + 10);\n    context.fillStyle = colorBorderLegend;\n    context.fillRect(\n      xInit - borderLegend,\n      yInit - borderLegend, legendWith + +borderLegend,\n      legendHeight + +borderLegend,\n    );\n    context.fillStyle = colorLegend;\n    context.fillRect(xInit, yInit, legendWith - +borderLegend, legendHeight - +borderLegend);\n    const marginX = xInit + +fontLegendSize;\n    let marginY = yInit + +fontLegendSize;\n    colors.forEach((color) => {\n      context.fillStyle = color;\n      context.fillRect(marginX, marginY, fontLegendSize, fontLegendSize);\n      marginY += +fontLegendSize + (+fontLegendSize / 2);\n    });\n    const textInitX = marginX + +fontLegendSize + +fontLegendSize / 2;\n    let textY = yInit + (+fontLegendSize + +fontLegendSize - fontLegendSize / 6);\n    const dataText = Object.keys(data);\n    context.fillStyle = fontColorLegend;\n    dataText.forEach((text) => {\n      context.font = `${fontLegendSize}px ${fontLegend}`;\n      context.fillText(text, textInitX, textY);\n      textY += +fontLegendSize + (+fontLegendSize / 2);\n    });\n  }\n\n  render() {\n    const {\n      style: {\n        widthGraph = '1000', heightGraph = '500', backgroundColor = 'white', widthBorder = 1, borderColor = 'black',\n      } = INITIAL_STATE,\n    } = this.props;\n    return (\n      <canvas\n        className=\"canvas\"\n        ref={this.canvasRef}\n        width={widthGraph}\n        height={heightGraph}\n        style={{ border: `${widthBorder}px solid ${borderColor}`, backgroundColor }}\n      />\n    );\n  }\n}\n\nexport default CanvasGraffic;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavSet.css';\n\nconst NavSet = () => (\n  <nav className=\"NavSet\">\n    <ul>\n      <li><Link to=\"/percentage-chart/settings/background\">Estilo Background</Link></li>\n      <li><Link to=\"/percentage-chart/settings/insert-data\">Inserir Dados</Link></li>\n      <li><Link to=\"/percentage-chart/settings/edit-bar\">Editar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/style-bar\">Estilizar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/legend\">Legenda</Link></li>\n    </ul>\n    <Link to=\"/code\"><button type=\"button\">Concluir</button></Link>\n  </nav>\n);\n\nexport default NavSet;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CanvasGraffic from '../../components/CanvasGraffic';\nimport NavSet from '../../components/NavSet/NavSet';\n\nimport './GraphicPage.css';\n\nconst GraphicPage = (props) => {\n  const {\n    data, colors, maxPercent, style,\n  } = props;\n\n  return (\n    <div className=\"GraphicPage\">\n      <NavSet />\n      <div className=\"graphic\">\n        <CanvasGraffic\n          style={style}\n          data={data}\n          maxPercent={maxPercent}\n          colors={colors}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  widthGraph: state.widthGraph,\n  heightGraph: state.heightGraph,\n  widthBorder: state.widthBorder,\n  backgroundColor: state.backgroundColor,\n  lineColor: state.lineColor,\n  fontSizeBackground: state.fontSizeBackground,\n  percentSide: state.percentSide,\n  widthLine: state.widthLine,\n  fontBackground: state.fontBackground,\n  maxPercent: state.maxPercent,\n  widthBar: state.widthBar,\n  fontSizeBar: state.fontSizeBar,\n  fontBar: state.fontBar,\n  fontColorBlack: state.fontColorBlack,\n  fontColor: state.fontColor,\n  topPercent: state.topPercent,\n  withLegend: state.withLegend,\n  fontLegend: state.fontLegend,\n  fontLegendSize: state.fontLegendSize,\n  fontColorLegend: state.fontColorLegend,\n  colorLegend: state.colorLegend,\n  borderLegend: state.borderLegend,\n  colorBorderLegend: state.colorBorderLegend,\n  baseName: state.baseName,\n  legendSide: state.legendSide,\n  legendVertical: state.legendVertical,\n  borderColor: state.borderColor,\n});\nexport default connect(mapStateToProps)(GraphicPage);\n","import React from 'react';\nimport DataPage from '../DataPage/DataPage';\nimport GraphicPage from '../GraphicPage/GraphicPage';\nimport './SetPage.css';\n\nfunction SetPage() {\n  return (\n    <div className=\"SetPage\">\n      <DataPage />\n      <GraphicPage />\n    </div>\n  );\n}\n\nexport default SetPage;\n","export const summaryData = [\n  {\n    name: 'data',\n    description: 'O data receberá um objeto onde a chave será o nome de referencia ao dado a ser exibido e o valor será o numero correspondente ao mesmo. O data fica fora do objeto “style” pois o mesmo conterá os dados a ser exibido.',\n  },\n  {\n    name: 'colors',\n    description: 'O colors é um array com as cores exibidas nas barras, sendo a sua ordem seguindo a sequencia do objeto data. Caso não seja passada cores o suficiente, as barras terão a cor #aaa e a mesma não será exibida na legenda.',\n  },\n  {\n    name: 'maxPercent',\n    description: 'O maxPercent pode receber três tipos: 100%, 75% e 50%, sendo esses o maximo de porcentagem a ser exibido no background. O maxPercent não está no objeto style para que caso prefira fazer uma logica para ser exibido de acordo com o resultado. Caso não seja passado ele assumirá o  valor de 100%.',\n  },\n];\n\nexport const summaryStyle = [\n  {\n    name: 'backgrondColor',\n    description: 'O backgroundColor especifica a a cor de funco do grafico. Caso nenhum valor seja passado assumirá o valor ‘white’.',\n  },\n  {\n    name: 'lineColor',\n    description: 'O lineColor define a cor das linhas de marcação da porcentagem no fundo do gráfico, caso não queira essas linhas, basta colocar a mesma cor que o backgroundColor. Caso nenhum valor seja passado, assumirá o valor ‘black’.',\n  },\n  {\n    name: 'widthLine',\n    description: 'A widthLine determina a espessura da linha que divide a porcentagem no fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'fontSizeBackground',\n    description: 'O fontSizeBackground informa o tamanho da letra usada para exibir a porcentagem no fundo do gráfico. Caso nenhum valor seja passado, assumirá o valor ‘10’.',\n  },\n  {\n    name: 'fontBackgorund ',\n    description: 'A fontBackground determina a font-family usada na porcentagem do fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'widthGraph',\n    description: 'O widthGraph especifica a largura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1000’.',\n  },\n  {\n    name: 'heightGraph',\n    description: 'heightGraph representa a altura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘500’.',\n  },\n  {\n    name: 'WidthBorder',\n    description: 'O widthBorder representa a espessura da borda do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'borderColor',\n    description: 'O borderColor determina a cor da borda do gráfico.Caso nenhum valor seja passado, assumirá o valor de ‘black’.',\n  },\n  {\n    name: 'percentSide',\n    description: 'O percentSide determina o lado onde será exibido a porcentagem, caso nenhum valor seja passado receberá o valor de ‘left’.',\n  },\n  {\n    name: 'widthBar',\n    description: 'A widthBar determina a largura das barras. Caso nenhum valor seja passado receberá o valor de ‘60’.',\n  },\n  {\n    name: 'fontSizeBar',\n    description: 'A fontSizeBar determina o tamanho da letra escrita na base da barra. Caso não seja passado nenhum valor, receberá ‘15’.',\n  },\n  {\n    name: 'fontBar',\n    description: 'A fontBar determina a font-family usada na base da barra. Caso nenhum valor seja passado, assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'fontColordifBar',\n    description: 'O fontColordifBar recebe um booleano onde determina se a cor das letras na base da barra terá a mesma cor que a barra, caso não seja acionado a cor será a mesma que as barras.',\n  },\n  {\n    name: 'fontColor',\n    description: 'Caso opte pela cor das letras serem diferente das barras, poderá escolher a cor através do fontColor, tendo como padrão o valor ‘black’.',\n  },\n  {\n    name: 'topPercent',\n    description: 'Quando acionado o topPercent exibe o valor da porcentagem no topo da barra, sua formatação é a mesma que as letras da base da barra, porém sua exibição é independente.',\n  },\n  {\n    name: 'baseName',\n    description: 'O baseName determina se será exibido ou não o nome na base da barra. Caso opte por usar legenda pode desativá-lo passando o valor booleano de false.',\n  },\n  {\n    name: 'withLegend',\n    description: 'O withLegend determina se você vai querer um gráfico com legenda ou não, recebendo o valor booleano de true para sim, tendo como padão o valor false.',\n  },\n  {\n    name: 'fonteLegend',\n    description: 'O fonteLegend determina o font-family usado na legenda, sendo o padrão ‘monospace’.',\n  },\n  {\n    name: 'fontLegendSize',\n    description: 'O fontColorLegend determina a cor da fonte usada na legenda, sendo o padrão ‘black’.',\n  },\n  {\n    name: 'colorLegend',\n    description: 'O colorLegend determina a cor da  legenda, sendo o padrão ‘white’.',\n  },\n  {\n    name: 'borderLegend',\n    description: 'O borderLegend determina a espessura da borda da legenda. Caso nenhum valor seja passado, receberá ‘1’',\n  },\n  {\n    name: 'colorBorderLegend',\n    description: 'colorBorderLegend determina a cor da borda da legenda',\n  },\n  {\n    name: 'legendSide',\n    description: 'O legendSide determina o lado em que a legenda ficará, tendo como padrão ‘right’',\n  },\n  {\n    name: 'legendVertical',\n    description: 'O legendVertical determina o posicionamento da legenda na vertical, tendo como padrão o ‘atop’',\n  },\n\n];\n","import React from 'react';\nimport { summaryData, summaryStyle } from '../../data/summaryInfo';\nimport './SummaryPage.css';\n\nconst SummaryPage = () => (\n  <div className=\"Summary\">\n    <h2>Sumário</h2>\n    <h3>Dados dinâmicos</h3>\n    {summaryData.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n    <h3>Dados de estilo</h3>\n    {summaryStyle.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n  </div>\n);\n\nexport default SummaryPage;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport CodePage from './pages/CodePage/CodePage';\nimport Home from './pages/Home/Home';\nimport SetPage from './pages/SetPage/SetPage';\nimport SummaryPage from './pages/SummaryPage.jsx/SummaryPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <Link to=\"/percentage-chart\">Início</Link>\n        <Link to=\"/percentage-chart/settings\">Estilizar Gráfico</Link>\n        <Link to=\"/percentage-chart/code\">Código do Estilo</Link>\n        <Link to=\"/percentage-chart/summary\">Sumário</Link>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/percentage-chart\" component={Home} />\n          <Route path=\"/percentage-chart/settings\" component={SetPage} />\n          <Route path=\"/percentage-chart/code\" component={CodePage} />\n          <Route path=\"/percentage-chart/summary\" component={SummaryPage} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_BACKGROUND, ADD_COLOR, ADD_DATA, ADD_LEGEND, ADD_STYLEBAR, EDIT_COLOR, EDIT_QTY, REMOVE_DATA,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  data: {},\n  colors: [],\n  backgroundColor: 'white',\n  lineColor: 'black',\n  fontSizeBackground: '10',\n  widthGraph: '1000',\n  heightGraph: '500',\n  widthBorder: '1',\n  borderColor: 'black',\n  widthLine: '1',\n  fontBackground: 'monospace',\n  maxPercent: '100%',\n  percentSide: 'left',\n  widthBar: '60',\n  fontSizeBar: '15',\n  fontBar: 'monospace',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: false,\n  baseName: true,\n  withLegend: false,\n  fontLegend: 'monospace',\n  fontLegendSize: '20',\n  fontColorLegend: 'black',\n  colorLegend: 'white',\n  borderLegend: 1,\n  colorBorderLegend: 'black',\n  legendSide: 'right',\n  legendVertical: 'atop',\n};\n\nconst reducerData = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return { ...state, data: { ...state.data, ...action.state } };\n\n    case ADD_COLOR:\n      return { ...state, colors: [...state.colors, action.state] };\n\n    case ADD_BACKGROUND:\n      return { ...state, ...action.state };\n\n    case ADD_STYLEBAR:\n      return { ...state, ...action.state };\n\n    case ADD_LEGEND:\n      return { ...state, ...action.state };\n\n    case REMOVE_DATA:\n      return {\n        ...state,\n        data: Object\n          .keys(state.data)\n          .filter((key) => key !== action.state.name)\n          .reduce((newState, name) => ({ ...newState, [name]: state.data[name] }), {}),\n        colors: state.colors.filter((color) => color !== action.state.color),\n      };\n\n    case EDIT_COLOR:\n      return {\n        ...state,\n        colors: state\n          .colors\n          .map((color, index) => (index === action.state.index ? action.state.color : color)),\n      };\n\n    case EDIT_QTY:\n      return {\n        ...state,\n        data: { ...state.data, [action.state.name]: action.state.qty },\n      };\n\n    default: return state;\n  }\n};\n\nexport default reducerData;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducerData from './reducers';\n\nconst store = createStore(reducerData, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}