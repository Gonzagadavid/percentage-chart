{"version":3,"sources":["pages/CodePage/CodePage.jsx","pages/Home/Home.jsx","redux/actions/index.js","components/EditBar/EditBar.jsx","components/InputsContainer/EditBarContainer.jsx","components/Input/Input.jsx","components/Select/Select.jsx","components/InputsContainer/InputBackground.jsx","components/InputsContainer/InputBar.jsx","components/InputsContainer/InputData.jsx","components/InputsContainer/Lengend.jsx","pages/DataPage/DataPage.jsx","components/NavSet/NavSet.jsx","pages/GraphicPage/GraphicPage.jsx","pages/SetPage/SetPage.jsx","data/summaryInfo.js","pages/SummaryPage.jsx/SummaryPage.jsx","App.jsx","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["connect","state","style","data","colors","widthGraph","heightGraph","widthBorder","backgroundColor","lineColor","fontSizeBackground","percentSide","widthLine","fontBackground","maxPercent","widthBar","fontSizeBar","fontBar","fontColordifBar","fontColor","topPercent","withLegend","fontLegend","fontLegendSize","fontColorLegend","colorLegend","borderLegend","colorBorderLegend","baseName","legendSide","legendVertical","borderColor","objectCode","useRef","npm","importComp","objData","Object","entries","reduce","str","arr","i","useState","copied","setCopied","copyToClip","ref","tempInput","document","createElement","value","current","innerText","body","appendChild","select","execCommand","removeChild","setTimeout","queryCommandSupported","className","type","onClick","map","color","Home","ADD_DATA","ADD_COLOR","ADD_BACKGROUND","ADD_STYLEBAR","ADD_LEGEND","REMOVE_DATA","EDIT_COLOR","EDIT_QTY","EditBar","text","changeColor","qty","changeQty","remove","onChange","dispatch","removeData","actionRemoveData","editColor","actionEditColor","editQty","actionEditQty","names","keys","name","index","target","Input","props","labelText","change","checked","htmlFor","id","defaultProps","Select","options","option","InputBackground","handlerChange","bind","this","setState","addBackground","Component","actionAddBackground","InputBar","addStyleBar","valueInput","actionAddStyleBar","InputData","dataName","insertData","addData","addColor","actionAddData","actionAddColor","Legend","insertLegend","addLegend","actionAddLegend","DataPage","exact","path","component","EditBarContainer","NavSet","to","SetPage","summaryData","description","summaryStyle","SummaryPage","App","fontSize","href","rel","CodePage","INITIAL_STATE","reducerData","action","width","filter","key","newState","store","createStore","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"+dA6KeA,eAhCS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EACPE,KAAMF,EAAME,KACZC,OAAQH,EAAMG,OACdC,WAAYJ,EAAMI,WAClBC,YAAaL,EAAMK,YACnBC,YAAaN,EAAMM,YACnBC,gBAAiBP,EAAMO,gBACvBC,UAAWR,EAAMQ,UACjBC,mBAAoBT,EAAMS,mBAC1BC,YAAaV,EAAMU,YACnBC,UAAWX,EAAMW,UACjBC,eAAgBZ,EAAMY,eACtBC,WAAYb,EAAMa,WAClBC,SAAUd,EAAMc,SAChBC,YAAaf,EAAMe,YACnBC,QAAShB,EAAMgB,QACfC,gBAAiBjB,EAAMiB,gBACvBC,UAAWlB,EAAMkB,UACjBC,WAAYnB,EAAMmB,WAClBC,WAAYpB,EAAMoB,WAClBC,WAAYrB,EAAMqB,WAClBC,eAAgBtB,EAAMsB,eACtBC,gBAAiBvB,EAAMuB,gBACvBC,YAAaxB,EAAMwB,YACnBC,aAAczB,EAAMyB,aACpBC,kBAAmB1B,EAAM0B,kBACzBC,SAAU3B,EAAM2B,SAChBC,WAAY5B,EAAM4B,WAClBC,eAAgB7B,EAAM6B,eACtBC,YAAa9B,EAAM8B,eAEN/B,EAtKE,SAAC,GAMX,IALLM,EAKI,EALJA,YAAaD,EAKT,EALSA,WAAYG,EAKrB,EALqBA,gBAAiBC,EAKtC,EALsCA,UAAWQ,EAKjD,EALiDA,QAASP,EAK1D,EAL0DA,mBAC9DE,EAII,EAJJA,UAAWC,EAIP,EAJOA,eAAgBF,EAIvB,EAJuBA,YAAaI,EAIpC,EAJoCA,SAAUC,EAI9C,EAJ8CA,YAClDE,EAGI,EAHJA,gBAAiBC,EAGb,EAHaA,UAAWC,EAGxB,EAHwBA,WAAYC,EAGpC,EAHoCA,WAAYC,EAGhD,EAHgDA,WAAYC,EAG5D,EAH4DA,eAAgBE,EAG5E,EAH4EA,YAChFC,EAEI,EAFJA,aAAcC,EAEV,EAFUA,kBAAmBH,EAE7B,EAF6BA,gBAAiBI,EAE9C,EAF8CA,SAAUC,EAExD,EAFwDA,WAAYC,EAEpE,EAFoEA,eACxEvB,EACI,EADJA,YAAawB,EACT,EADSA,YAAa5B,EACtB,EADsBA,KAAMW,EAC5B,EAD4BA,WAAYV,EACxC,EADwCA,OAEtC4B,EAAaC,iBAAO,MACpBC,EAAMD,iBAAO,MACbE,EAAaF,iBAAO,MACpBG,EAAO,UAAMC,OAChBC,QAAQnC,GACRoC,QAAO,SAACC,EAAKC,EAAKC,GAAX,gBAAoBF,GAApB,OAAgC,IAANE,EAAU,IAAM,GAA1C,YAAgDD,EAAI,GAApD,aAA2DA,EAAI,MAAM,IAFlE,KAIb,EAA4BE,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAa,SAACC,GAClB,IAAMC,EAAYC,SAASC,cAAc,YACzCF,EAAUG,MAAQJ,EAAIK,QAAQC,UAC9BJ,SAASK,KAAKC,YAAYP,GAC1BA,EAAUQ,SACVP,SAASQ,YAAY,QACrBR,SAASK,KAAKI,YAAYV,GAC1BH,GAAU,GACVc,YAAW,kBAAMd,GAAU,KAAQ,MAGrC,OAAQI,SAASW,sBAAsB,SAErC,sBAAKC,UAAU,WAAf,UACGjB,EACC,oBAAGiB,UAAU,SAAb,UACE,cAAC,IAAD,IACA,2DAEA,GACJ,6CACA,2HACA,sBAAKA,UAAU,OAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,cAAcE,QAAS,kBAAMjB,EAAWd,IAAxE,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAW6B,UAAU,sBAArB,SACE,mBAAGd,IAAKf,EAAR,gFAMO3B,EANP,+BAOQE,EAPR,+BAQQD,EARR,mCASYE,EATZ,6BAUMC,EAVN,sCAWeC,EAXf,+BAYQC,EAZR,6BAaMC,EAbN,kCAcWC,EAdX,4BAeKE,EAfL,+BAgBQC,EAhBR,2BAiBIC,EAjBJ,kCAkBWC,EAlBX,4BAmBMC,EAnBN,6BAoBMC,EApBN,4BAqBMC,EArBN,6BAsBOC,EAtBP,kCAuBWC,EAvBX,mCAwBYC,EAxBZ,+BAyBQC,EAzBR,gCA0BSC,EA1BT,qCA2BcC,EA3Bd,2BA4BIC,EA5BJ,6BA6BOC,EA7BP,kCA8BWC,EA9BX,+BA+BQC,EA/BR,0CAwCJ,gLAIA,sBAAK8B,UAAU,OAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,cAAcE,QAAS,kBAAMjB,EAAWZ,IAAxE,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAW2B,UAAU,iBAArB,SACE,mBAAGd,IAAKb,EAAR,mDAKJ,kJAIA,sBAAK2B,UAAU,OAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,cAAcE,QAAS,kBAAMjB,EAAWX,IAAxE,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAW0B,UAAU,sBAArB,SACE,mBAAGd,IAAKZ,EAAR,qQAWKC,EAXL,kCAYWtB,EAZX,8BAaOV,EAAO4D,KAAI,SAACC,GAAD,iBAAeA,EAAf,QAblB,yEC3FKC,G,OAlBF,kBACX,sBAAKL,UAAU,OAAf,UACE,4DACA,gJAIA,oIACA,+BACE,yFACA,yHACA,wHACA,qGACA,mHChBOM,EAAW,WACXC,EAAY,YACZC,EAAiB,iBACjBC,EAAe,eACfC,EAAa,aACbC,EAAc,cACdC,EAAa,aACbC,EAAW,WCOTC,G,OAXC,SAAC,GAAD,IACdC,EADc,EACdA,KAAMX,EADQ,EACRA,MAAOY,EADC,EACDA,YAAaC,EADZ,EACYA,IAAKC,EADjB,EACiBA,UAAWC,EAD5B,EAC4BA,OAD5B,OAGd,sBAAKnB,UAAU,UAAf,UACE,+BAAOe,IACP,uBAAOd,KAAK,QAAQX,MAAOc,EAAOgB,SAAUJ,IAC5C,uBAAOf,KAAK,SAASX,MAAO2B,EAAKG,SAAUF,IAC3C,wBAAQjB,KAAK,SAASC,QAASiB,EAA/B,yBC6BWhF,G,MAAAA,aAXS,SAACC,GAAD,MAAY,CAClCE,KAAMF,EAAME,KACZC,OAAQH,EAAMG,WAGW,SAAC8E,GAAD,MAAe,CACxCC,WAAY,SAAClF,GAAD,OAAWiF,EFfO,SAACjF,GAAD,MAAY,CAAE6D,KAAMU,EAAavE,SEe/BmF,CAAiBnF,KACjDoF,UAAW,SAACpF,GAAD,OAAWiF,EFdO,SAACjF,GAAD,MAAY,CAAE6D,KAAMW,EAAYxE,SEc9BqF,CAAgBrF,KAC/CsF,QAAS,SAACtF,GAAD,OAAWiF,EFbO,SAACjF,GAAD,MAAY,CAAE6D,KAAMY,EAAUzE,SEa5BuF,CAAcvF,QAG9BD,EAjCU,SAAC,GAEnB,IADLG,EACI,EADJA,KAAMC,EACF,EADEA,OAAQ+E,EACV,EADUA,WAAYE,EACtB,EADsBA,UAAWE,EACjC,EADiCA,QAE/BE,EAAQpD,OAAOqD,KAAKvF,GAC1B,OACE,sBAAK0D,UAAU,iBAAf,UACE,+CACC4B,EAAMzB,KAAI,SAAC2B,EAAMC,GAAP,OACT,cAAC,EAAD,CACEhB,KAAMe,EAEN1B,MAAO7D,EAAOwF,GACdd,IAAK3E,EAAKwF,GACVX,OAAQ,kBAAMG,EAAW,CAAEQ,OAAM1B,MAAO7D,EAAOwF,MAC/Cf,YAAa,gBAAa1B,EAAb,EAAG0C,OAAU1C,MAAb,OAA2BkC,EAAU,CAAEO,QAAO3B,MAAOd,KAClE4B,UAAW,gBAAa5B,EAAb,EAAG0C,OAAU1C,MAAb,OAA2BoC,EAAQ,CAAEI,OAAMb,IAAK3B,MALtDwC,a,+CCRTG,G,OAAQ,SAACC,GACb,IACEC,EACED,EADFC,UAAW7C,EACT4C,EADS5C,MAAO8C,EAChBF,EADgBE,OAAQnC,EACxBiC,EADwBjC,KAAM6B,EAC9BI,EAD8BJ,KAAMO,EACpCH,EADoCG,QAGxC,OACE,wBAAOC,QAASR,EAAM9B,UAAU,QAAhC,UACY,UAATC,GAA6B,aAATA,EAAsBkC,EAAY,GACvD,uBACElC,KAAMA,EACNsC,GAAIT,EACJxC,MAAOA,EACP+C,QAASA,EACTjB,SAAUgB,EACVN,KAAMA,IAEE,UAAT7B,GAA6B,aAATA,EAAsBkC,EAAY,QAa7DF,EAAMO,aAAe,CACnBlD,MAAO,aAGM2C,QCrCTQ,G,OAAS,SAACP,GACd,IACEC,EACED,EADFC,UAAW7C,EACT4C,EADS5C,MAAO8C,EAChBF,EADgBE,OAAQN,EACxBI,EADwBJ,KAAMY,EAC9BR,EAD8BQ,QAGlC,OACE,wBAAOJ,QAASR,EAAM9B,UAAU,SAAhC,UACGmC,EACD,wBACEI,GAAIT,EACJxC,MAAOA,EACP8B,SAAUgB,EACVN,KAAMA,EAJR,SAOIY,EAAQvC,KAAI,SAACwC,GAAD,OAAY,iCAAsBA,GAATA,aAe/CF,EAAOD,aAAe,CACpBlD,MAAO,aAGMmD,QC/BTG,E,kDACJ,aAAe,IAAD,8BACZ,gBACKxG,MAAQ,CACXO,gBAAiB,OACjBC,UAAW,OACXC,mBAAoB,KACpBG,eAAgB,YAChBR,WAAY,OACZC,YAAa,MACbM,UAAW,IACXE,WAAY,OACZH,YAAa,OACbJ,YAAa,IACbwB,YAAa,SAEf,EAAK2E,cAAgB,EAAKA,cAAcC,KAAnB,gBAfT,E,iDAkBd,YAA2B,IAAXd,EAAU,EAAVA,OACNF,EAAgBE,EAAhBF,KAAMxC,EAAU0C,EAAV1C,MACdyD,KAAKC,SAAL,eAAiBlB,EAAOxC,KAExB2D,EAD0BF,KAAKb,MAAvBe,eACM,eAAGnB,EAAOxC,M,oBAG1B,WACE,MAGIyD,KAAK3G,MAFPO,EADF,EACEA,gBAAiBC,EADnB,EACmBA,UAAWC,EAD9B,EAC8BA,mBAAoBL,EADlD,EACkDA,WAAYC,EAD9D,EAC8DA,YAC5DM,EAFF,EAEEA,UAAWC,EAFb,EAEaA,eAAgBC,EAF7B,EAE6BA,WAAYP,EAFzC,EAEyCA,YAAawB,EAFtD,EAEsDA,YAEtD,OACE,sBAAK8B,UAAU,iBAAf,UACE,mDACA,cAAC,EAAD,CAAOC,KAAK,QAAQ6B,KAAK,kBAAkBK,UAAU,gBAAgB7C,MAAO3C,EAAiByF,OAAQW,KAAKF,gBAC1G,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,YAAYK,UAAU,gBAAgB7C,MAAO1C,EAAWwF,OAAQW,KAAKF,gBAC9F,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,YAAYK,UAAU,oBAAoB7C,MAAOvC,EAAWqF,OAAQW,KAAKF,gBACnG,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,qBAAqBK,UAAU,oBAAoB7C,MAAOzC,EAAoBuF,OAAQW,KAAKF,gBACrH,cAAC,EAAD,CAAO5C,KAAK,OAAO6B,KAAK,iBAAiBK,UAAU,kBAAkB7C,MAAOtC,EAAgBoF,OAAQW,KAAKF,gBACzG,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,aAAaK,UAAU,sBAAsB7C,MAAO9C,EAAY4F,OAAQW,KAAKF,gBACvG,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,cAAcK,UAAU,qBAAqB7C,MAAO7C,EAAa2F,OAAQW,KAAKF,gBACxG,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,cAAcK,UAAU,sBAAsB7C,MAAO5C,EAAa0F,OAAQW,KAAKF,gBACzG,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,cAAcK,UAAU,gBAAgB7C,MAAOpB,EAAakE,OAAQW,KAAKF,gBAClG,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,cAAcK,UAAU,WAAW7C,MAAM,OAAO8C,OAAQW,KAAKF,gBACtF,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,cAAcK,UAAU,UAAU7C,MAAM,QAAQ8C,OAAQW,KAAKF,gBACtF,cAAC,EAAD,CACEf,KAAK,aACLK,UAAU,4BACV7C,MAAOrC,EACPmF,OAAQW,KAAKF,cACbH,QAAS,CAAC,OAAQ,MAAO,gB,GAlDLQ,aA6Df/G,cAAQ,MAJI,SAACkF,GAAD,MAAe,CACxC4B,cAAe,SAAC7G,GAAD,OAAWiF,ELpDO,SAACjF,GAAD,MAAY,CAAE6D,KAAMO,EAAgBpE,SKoDlC+G,CAAoB/G,QAG1CD,CAAkCyG,GC9D3CQ,E,kDACJ,aAAe,IAAD,8BACZ,gBACKhH,MAAQ,CACXc,SAAU,KACVC,YAAa,KACbE,iBAAiB,EACjBC,UAAW,QACXF,QAAS,YACTG,YAAY,EACZQ,UAAU,GAEZ,EAAK8E,cAAgB,EAAKA,cAAcC,KAAnB,gBAXT,E,iDAcd,YAA2B,IAAXd,EAAU,EAAVA,OAEZF,EACEE,EADFF,KAAMxC,EACJ0C,EADI1C,MAAO+C,EACXL,EADWK,QAASpC,EACpB+B,EADoB/B,KAEhBoD,EAAgBN,KAAKb,MAArBmB,YAEFC,EADoB,aAATrD,EACaoC,EAAU/C,EACxCyD,KAAKC,SAAL,eAAiBlB,EAAOwB,IACxBD,EAAY,eAAGvB,EAAOwB,M,oBAGxB,WACE,MAEIP,KAAK3G,MADPc,EADF,EACEA,SAAUC,EADZ,EACYA,YAAaE,EADzB,EACyBA,gBAAiBC,EAD1C,EAC0CA,UAAWC,EADrD,EACqDA,WAAYH,EADjE,EACiEA,QAASW,EAD1E,EAC0EA,SAE1E,OACE,sBAAKiC,UAAU,iBAAf,UACE,mDACA,cAAC,EAAD,CACEC,KAAK,SACL6B,KAAK,WACLK,UAAU,sBACV7C,MAAOpC,EACPkF,OAAQW,KAAKF,gBAEf,cAAC,EAAD,CACE5C,KAAK,SACL6B,KAAK,cACLK,UAAU,oBACV7C,MAAOnC,EACPiF,OAAQW,KAAKF,gBAEf,cAAC,EAAD,CACE5C,KAAK,OACL6B,KAAK,UACLK,UAAU,kBACV7C,MAAOlC,EACPgF,OAAQW,KAAKF,gBAEf,cAAC,EAAD,CACE5C,KAAK,WACL6B,KAAK,iBACLK,UAAU,mCACVE,QAAShF,EACT+E,OAAQW,KAAKF,gBAGdxF,GAED,cAAC,EAAD,CACE4C,KAAK,QACL6B,KAAK,YACLK,UAAU,gBACV7C,MAAOhC,EACP8E,OAAQW,KAAKF,gBAIf,cAAC,EAAD,CACE5C,KAAK,WACL6B,KAAK,aACLK,UAAU,yCACVE,QAAS9E,EACT6E,OAAQW,KAAKF,gBAEf,cAAC,EAAD,CACE5C,KAAK,WACL6B,KAAK,WACLK,UAAU,kCACVE,QAAStE,EACTqE,OAAQW,KAAKF,uB,GArFAK,aAgGR/G,cAAQ,MAJI,SAACkF,GAAD,MAAe,CACxCgC,YAAa,SAACjH,GAAD,OAAWiF,ENpFO,SAACjF,GAAD,MAAY,CAAE6D,KAAMQ,EAAcrE,SMoFhCmH,CAAkBnH,QAGtCD,CAAkCiH,GChG3CI,E,kDACJ,aAAe,IAAD,8BACZ,gBACKpH,MAAQ,CACXqH,SAAU,GACVxC,IAAK,EACLb,MAAO,SAET,EAAKyC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKY,WAAa,EAAKA,WAAWZ,KAAhB,gBARN,E,iDAWd,YAA2B,IAAXd,EAAU,EAAVA,OACNF,EAAgBE,EAAhBF,KAAMxC,EAAU0C,EAAV1C,MACdyD,KAAKC,SAAL,eAAiBlB,EAAOxC,M,wBAG1B,WACE,MAA8ByD,KAAKb,MAA3ByB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SACjB,EAAiCb,KAAK3G,MAA9BqH,EAAR,EAAQA,SAAUxC,EAAlB,EAAkBA,IAAKb,EAAvB,EAAuBA,MACvBuD,EAAQ,eAAGF,EAAWxC,IACtB2C,EAASxD,GACT2C,KAAKC,SAAS,CAAES,SAAU,GAAIxC,IAAK,EAAGb,MAAO,O,oBAG/C,WACE,MAAiC2C,KAAK3G,MAA9BqH,EAAR,EAAQA,SAAUxC,EAAlB,EAAkBA,IAAKb,EAAvB,EAAuBA,MACvB,OACE,sBAAKJ,UAAU,iBAAf,UACE,+CACA,cAAC,EAAD,CAAOC,KAAK,OAAO6B,KAAK,WAAWK,UAAU,QAAQ7C,MAAOmE,EAAUrB,OAAQW,KAAKF,gBACnF,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,MAAMK,UAAU,cAAc7C,MAAO2B,EAAKmB,OAAQW,KAAKF,gBACjF,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,QAAQxC,MAAOc,EAAO+B,UAAU,OAAOC,OAAQW,KAAKF,gBAC7E,wBAAQ5C,KAAK,SAASC,QAAS6C,KAAKW,WAApC,iC,GAjCgBR,aA4CT/G,cAAQ,MALI,SAACkF,GAAD,MAAe,CACxCsC,QAAS,SAACvH,GAAD,OAAWiF,EPrCO,SAACjF,GAAD,MAAY,CAAE6D,KAAMK,EAAUlE,SOqC5ByH,CAAczH,KAC3CwH,SAAU,SAACxH,GAAD,OAAWiF,EPpCO,SAACjF,GAAD,MAAY,CAAE6D,KAAMM,EAAWnE,SOoC7B0H,CAAe1H,QAGhCD,CAAkCqH,G,OC5C3CO,E,kDACJ,aAAe,IAAD,8BACZ,gBACK3H,MAAQ,CACXoB,YAAY,EACZC,WAAY,YACZC,eAAgB,KAChBC,gBAAiB,QACjBC,YAAa,OACbC,aAAc,EACdC,kBAAmB,QACnBE,WAAY,QACZC,eAAgB,QAElB,EAAK4E,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKkB,aAAe,EAAKA,aAAalB,KAAlB,gBAdR,E,iDAiBd,YAA2B,IAAD,OAAVd,EAAU,EAAVA,OAEZF,EACEE,EADFF,KAAMxC,EACJ0C,EADI1C,MAAO+C,EACXL,EADWK,QAGTiB,EADoB,aADtBtB,EADoB/B,KAGMoC,EAAU/C,EACxCyD,KAAKC,SAAL,eAAiBlB,EAAOwB,IAAc,WACvB,eAATxB,GAAuB,EAAKkC,oB,0BAIpC,YAEEC,EADsBlB,KAAKb,MAAnB+B,WACE,eAAKlB,KAAK3G,U,oBAGtB,WACE,MAGI2G,KAAK3G,MAFPoB,EADF,EACEA,WAAYC,EADd,EACcA,WAAYC,EAD1B,EAC0BA,eAAgBE,EAD1C,EAC0CA,YAAaC,EADvD,EACuDA,aAAcC,EADrE,EACqEA,kBACnEH,EAFF,EAEEA,gBAEF,OACE,sBAAKqC,UAAU,iBAAf,UACE,yCACA,cAAC,EAAD,CAAOC,KAAK,WAAW6B,KAAK,aAAaK,UAAU,cAAcE,QAAS7E,EAAY4E,OAAQW,KAAKF,gBACjGrF,GAEA,qCACE,cAAC,EAAD,CAAOyC,KAAK,OAAO6B,KAAK,aAAaK,UAAU,oBAAoB7C,MAAO7B,EAAY2E,OAAQW,KAAKF,gBACnG,cAAC,EAAD,CACE5C,KAAK,SACL6B,KAAK,iBACLK,UAAU,oBACV7C,MAAO5B,EACP0E,OAAQW,KAAKF,gBAEf,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,kBAAkBK,UAAU,gBAAgB7C,MAAO3B,EAAiByE,OAAQW,KAAKF,gBAC1G,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,cAAcK,UAAU,2BAA2B7C,MAAO1B,EAAawE,OAAQW,KAAKF,gBAC7G,cAAC,EAAD,CAAO5C,KAAK,SAAS6B,KAAK,eAAeK,UAAU,oBAAoB7C,MAAOzB,EAAcuE,OAAQW,KAAKF,gBACzG,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,oBAAoBK,UAAU,gBAAgB7C,MAAOxB,EAAmBsE,OAAQW,KAAKF,gBAC9G,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,aAAaK,UAAU,WAAW7C,MAAM,OAAO8C,OAAQW,KAAKF,gBACrF,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,aAAaK,UAAU,UAAU7C,MAAM,QAAQ8C,OAAQW,KAAKF,gBACrF,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,iBAAiBK,UAAU,WAAW7C,MAAM,OAAO8C,OAAQW,KAAKF,gBACzF,cAAC,EAAD,CAAO5C,KAAK,QAAQ6B,KAAK,iBAAiBK,UAAU,WAAW7C,MAAM,SAAS8C,OAAQW,KAAKF,gBAC3F,wBAAQ5C,KAAK,SAASC,QAAS6C,KAAKiB,aAApC,+B,GA9DSd,aA0EN/G,cAAQ,MAJI,SAACkF,GAAD,MAAe,CACxC4C,UAAW,SAAC7H,GAAD,OAAWiF,ER5DO,SAACjF,GAAD,MAAY,CAAE6D,KAAMS,EAAYtE,SQ4D9B8H,CAAgB9H,QAGlCD,CAAkC4H,GC3DlCI,G,OAZE,kBACf,qBAAKnE,UAAU,WAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,6BAA6BC,UAAW1B,IAC1D,cAAC,IAAD,CAAOyB,KAAK,yCAAyCC,UAAWd,IAChE,cAAC,IAAD,CAAOa,KAAK,sCAAsCC,UAAWC,IAC7D,cAAC,IAAD,CAAOF,KAAK,uCAAuCC,UAAWlB,IAC9D,cAAC,IAAD,CAAOiB,KAAK,oCAAoCC,UAAWP,W,QCClDS,G,OAbA,kBACb,sBAAKxE,UAAU,SAAf,UACE,+BACE,6BAAI,cAAC,IAAD,CAAMyE,GAAG,6BAAT,iCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,yCAAT,6BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,sCAAT,6BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,uCAAT,gCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,oCAAT,0BAEN,cAAC,IAAD,CAAMA,GAAG,yBAAT,SAAkC,wBAAQxE,KAAK,SAAb,6BCmBvB9D,G,OAAAA,aANS,SAACC,GAAD,MAAY,CAClCC,MAAOD,EACPE,KAAMF,EAAME,KACZC,OAAQH,EAAMG,OACdU,WAAYb,EAAMa,cAELd,EAzBK,SAAC+F,GACnB,IACE5F,EACE4F,EADF5F,KAAMC,EACJ2F,EADI3F,OAAQU,EACZiF,EADYjF,WAAYZ,EACxB6F,EADwB7F,MAE5B,OACE,sBAAK2D,UAAU,cAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,cAAC,eAAD,CACE3D,MAAOA,EACPC,KAAMA,EACNW,WAAYA,EACZV,OAAQA,a,OCLHmI,MATf,WACE,OACE,sBAAK1E,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCTO2E,EAAc,CACzB,CACE7C,KAAM,OACN8C,YAAa,iPAEf,CACE9C,KAAM,SACN8C,YAAa,2OAEf,CACE9C,KAAM,aACN8C,YAAa,yTAIJC,EAAe,CAC1B,CACE/C,KAAM,iBACN8C,YAAa,mIAEf,CACE9C,KAAM,YACN8C,YAAa,yPAEf,CACE9C,KAAM,YACN8C,YAAa,wKAEf,CACE9C,KAAM,qBACN8C,YAAa,+KAEf,CACE9C,KAAM,kBACN8C,YAAa,0KAEf,CACE9C,KAAM,aACN8C,YAAa,wIAEf,CACE9C,KAAM,cACN8C,YAAa,qIAEf,CACE9C,KAAM,cACN8C,YAAa,sIAEf,CACE9C,KAAM,cACN8C,YAAa,kIAEf,CACE9C,KAAM,cACN8C,YAAa,8IAEf,CACE9C,KAAM,WACN8C,YAAa,oHAEf,CACE9C,KAAM,cACN8C,YAAa,2IAEf,CACE9C,KAAM,UACN8C,YAAa,2IAEf,CACE9C,KAAM,kBACN8C,YAAa,4LAEf,CACE9C,KAAM,YACN8C,YAAa,+JAEf,CACE9C,KAAM,aACN8C,YAAa,gMAEf,CACE9C,KAAM,WACN8C,YAAa,iKAEf,CACE9C,KAAM,aACN8C,YAAa,qKAEf,CACE9C,KAAM,cACN8C,YAAa,oGAEf,CACE9C,KAAM,iBACN8C,YAAa,qGAEf,CACE9C,KAAM,cACN8C,YAAa,mFAEf,CACE9C,KAAM,eACN8C,YAAa,uHAEf,CACE9C,KAAM,oBACN8C,YAAa,yDAEf,CACE9C,KAAM,aACN8C,YAAa,oGAEf,CACE9C,KAAM,iBACN8C,YAAa,gHC1FFE,I,OApBK,kBAClB,sBAAK9E,UAAU,UAAf,UACE,4CACA,oDACC2E,EAAYxE,KAAI,gBAAG2B,EAAH,EAAGA,KAAM8C,EAAT,EAASA,YAAT,OACf,sBAAgB5E,UAAU,OAA1B,UACE,6BAAK8B,IACL,4BAAI8C,MAFI9C,MAKZ,iDACC+C,EAAa1E,KAAI,gBAAG2B,EAAH,EAAGA,KAAM8C,EAAT,EAASA,YAAT,OAChB,sBAAgB5E,UAAU,OAA1B,UACE,6BAAK8B,IACL,4BAAI8C,MAFI9C,WCkBDiD,OAzBf,WACE,OACE,sBAAK/E,UAAU,MAAf,UACE,sBAAKuC,GAAG,UAAR,UACE,sBAAKlG,MAAO,CAAE+D,MAAO,QAAS4E,SAAU,QAAxC,UACE,mBAAGC,KAAK,mDAAmDjD,OAAO,SAASkD,IAAI,aAA/E,SAA4F,cAAC,IAAD,MAC5F,mBAAGD,KAAK,2DAA2DjD,OAAO,SAASkD,IAAI,aAAvF,SAAoG,cAAC,IAAD,SAEtG,cAAC,IAAD,CAAMT,GAAG,oBAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,6BAAT,kCACA,cAAC,IAAD,CAAMA,GAAG,yBAAT,iCACA,cAAC,IAAD,CAAMA,GAAG,4BAAT,2BAEF,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,oBAAoBC,UAAWjE,IACjD,cAAC,IAAD,CAAOgE,KAAK,6BAA6BC,UAAWI,IACpD,cAAC,IAAD,CAAOL,KAAK,yBAAyBC,UAAWa,IAChD,cAAC,IAAD,CAAOd,KAAK,4BAA4BC,UAAWQ,c,2BCvBvDM,GAAgB,CACpB9I,KAAM,GACNC,OAAQ,GACRI,gBAAiB,QACjBC,UAAW,QACXC,mBAAoB,KACpBL,WAAY,OACZC,YAAa,MACbC,YAAa,IACbwB,YAAa,QACbnB,UAAW,IACXC,eAAgB,YAChBC,WAAY,OACZH,YAAa,OACbI,SAAU,KACVC,YAAa,KACbC,QAAS,YACTC,iBAAiB,EACjBC,UAAW,QACXC,YAAY,EACZQ,UAAU,EACVP,YAAY,EACZC,WAAY,YACZC,eAAgB,KAChBC,gBAAiB,QACjBC,YAAa,QACbC,aAAc,EACdC,kBAAmB,QACnBE,WAAY,QACZC,eAAgB,QAiDHoH,GA9CK,WAAoC,IAAnCjJ,EAAkC,uDAA1BgJ,GAAeE,EAAW,uCACrD,OAAQA,EAAOrF,MACb,KAAKK,EACH,OAAO,2BAAKlE,GAAZ,IAAmBE,KAAK,2BAAMF,EAAME,MAASgJ,EAAOlJ,SAEtD,KAAKmE,EACH,OAAO,2BAAKnE,GAAZ,IAAmBG,OAAO,GAAD,oBAAMH,EAAMG,QAAZ,CAAoB+I,EAAOlJ,UAEtD,KAAKoE,EAEH,OADApB,SAASK,KAAKpD,MAAMkJ,MAApB,WAAgCD,EAAOlJ,MAAMI,WAAa,IAA1D,MACO,2BAAKJ,GAAUkJ,EAAOlJ,OAE/B,KAAKqE,EAGL,KAAKC,EACH,OAAO,2BAAKtE,GAAUkJ,EAAOlJ,OAE/B,KAAKuE,EACH,OAAO,2BACFvE,GADL,IAEEE,KAAMkC,OACHqD,KAAKzF,EAAME,MACXkJ,QAAO,SAACC,GAAD,OAASA,IAAQH,EAAOlJ,MAAM0F,QACrCpD,QAAO,SAACgH,EAAU5D,GAAX,mBAAC,eAAyB4D,GAA1B,kBAAqC5D,EAAO1F,EAAME,KAAKwF,OAAU,IAC3EvF,OAAQH,EAAMG,OAAOiJ,QAAO,SAACpF,GAAD,OAAWA,IAAUkF,EAAOlJ,MAAMgE,WAGlE,KAAKQ,EACH,OAAO,2BACFxE,GADL,IAEEG,OAAQH,EACLG,OACA4D,KAAI,SAACC,EAAO2B,GAAR,OAAmBA,IAAUuD,EAAOlJ,MAAM2F,MAAQuD,EAAOlJ,MAAMgE,MAAQA,OAGlF,KAAKS,EACH,OAAO,2BACFzE,GADL,IAEEE,KAAK,2BAAMF,EAAME,MAAb,kBAAoBgJ,EAAOlJ,MAAM0F,KAAOwD,EAAOlJ,MAAM6E,QAG7D,QAAS,OAAO7E,ICxELuJ,GAFDC,uBAAYP,GAAaQ,kCCIvCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJvG,SAAS4G,eAAe,U","file":"static/js/main.d8cac3c7.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './CodePage.css';\nimport Highlight from 'react-highlight';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { FaRegCopy } from 'react-icons/fa';\n\nconst CodePage = ({\n  heightGraph, widthGraph, backgroundColor, lineColor, fontBar, fontSizeBackground,\n  widthLine, fontBackground, percentSide, widthBar, fontSizeBar,\n  fontColordifBar, fontColor, topPercent, withLegend, fontLegend, fontLegendSize, colorLegend,\n  borderLegend, colorBorderLegend, fontColorLegend, baseName, legendSide, legendVertical,\n  widthBorder, borderColor, data, maxPercent, colors,\n}) => {\n  const objectCode = useRef(null);\n  const npm = useRef(null);\n  const importComp = useRef(null);\n  const objData = `${Object\n    .entries(data)\n    .reduce((str, arr, i) => `${str}${i !== 0 ? ',' : ''} ${arr[0]}: ${arr[1]}`, '')} `;\n\n  const [copied, setCopied] = useState(false);\n  const copyToClip = (ref) => {\n    const tempInput = document.createElement('textarea');\n    tempInput.value = ref.current.innerText;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempInput);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 3000);\n  };\n\n  return (document.queryCommandSupported('copy')\n    && (\n    <div className=\"CodePage\">\n      {copied ? (\n        <p className=\"copied\">\n          <GiConfirmed />\n          <span>Copied to clipboard!</span>\n        </p>\n      ) : ''}\n      <h2>Finalizando</h2>\n      <p>Crie um arquivo, copie e cole o objeto com os dados da estilização, depois o exporte</p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(objectCode)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={objectCode}>\n            {\n            `\n//style.js\n            \nconst style = { \n  widthGraph: '${widthGraph}',\n  widthBorder: '${widthBorder}',\n  heightGraph: '${heightGraph}',\n  backgroundColor: '${backgroundColor}',\n  lineColor: '${lineColor}',\n  fontSizeBackground: '${fontSizeBackground}',\n  percentSide: '${percentSide}',\n  widthLine: '${widthLine}',\n  fontBackground: '${fontBackground}',\n  widthBar: '${widthBar}',\n  fontSizeBar: '${fontSizeBar}',\n  fontBar: '${fontBar}',\n  fontColordifBar: ${fontColordifBar},\n  fontColor: '${fontColor}',\n  topPercent: ${topPercent},\n  withLegend: ${withLegend},\n  fontLegend: '${fontLegend}',\n  fontLegendSize: '${fontLegendSize}',\n  fontColorLegend: '${fontColorLegend}',\n  colorLegend: '${colorLegend}',\n  borderLegend: '${borderLegend}',\n  colorBorderLegend: '${colorBorderLegend}',\n  baseName: ${baseName},\n  legendSide: '${legendSide}',\n  legendVertical: '${legendVertical}',\n  borderColor: '${borderColor}',\n}\n\nexport default style\n`\n}\n          </p>\n        </Highlight>\n      </div>\n      <p>\n        Instale o componente libary em sua aplicação\n        (caso ocorra conflitos de versões, use o --force, isso não altera sua aplicação)\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(npm)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-shell\">\n          <p ref={npm}>\n            npm i stylized-graphic-component\n          </p>\n        </Highlight>\n      </div>\n      <p>\n        Importe o componete stylized-percentage-chart  e passe os dados do estilo e os dados a ser\n        renderizado como props\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(importComp)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={importComp}>\n            {\n              `\nimport React from 'react';\nimport { GraphicComponent } from 'stylized-graphic-component'\nimport style from ./path/style\n\nconst GraphicPage = () => (\n  <div className=\"graphic\">\n  <GraphicComponent\n      style={style}\n      data={{${objData}}}\n      maxPercent={'${maxPercent}'}\n      colors={[${colors.map((color) => `'${color}'`)}]}\n    />\n  </div>\n)\n\nexport default GraphicPage;\n`\n            }\n          </p>\n        </Highlight>\n      </div>\n    </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  widthGraph: state.widthGraph,\n  heightGraph: state.heightGraph,\n  widthBorder: state.widthBorder,\n  backgroundColor: state.backgroundColor,\n  lineColor: state.lineColor,\n  fontSizeBackground: state.fontSizeBackground,\n  percentSide: state.percentSide,\n  widthLine: state.widthLine,\n  fontBackground: state.fontBackground,\n  maxPercent: state.maxPercent,\n  widthBar: state.widthBar,\n  fontSizeBar: state.fontSizeBar,\n  fontBar: state.fontBar,\n  fontColordifBar: state.fontColordifBar,\n  fontColor: state.fontColor,\n  topPercent: state.topPercent,\n  withLegend: state.withLegend,\n  fontLegend: state.fontLegend,\n  fontLegendSize: state.fontLegendSize,\n  fontColorLegend: state.fontColorLegend,\n  colorLegend: state.colorLegend,\n  borderLegend: state.borderLegend,\n  colorBorderLegend: state.colorBorderLegend,\n  baseName: state.baseName,\n  legendSide: state.legendSide,\n  legendVertical: state.legendVertical,\n  borderColor: state.borderColor,\n});\nexport default connect(mapStateToProps)(CodePage);\n","import React from 'react';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"Home\">\n    <h1>Stylized Graphic Component</h1>\n    <p>\n      Essa página tem como finalidade auxiliar na estilização do componente\n      libary stylized-percentage-chart\n    </p>\n    <p>Na página Estilizar gráfico encontrar ferramentas que permitirá que estilize o gráfico:</p>\n    <ul>\n      <li>Na guia Backgroud, estilizar o fundo do seu gráfico;</li>\n      <li>Na guia Inserir Dados, insira dados simulando o que ocorrerá na sua aplização;</li>\n      <li>Na guia Editar Barras, poderá alterar e excluir os dados e trocar a cor das barras;</li>\n      <li>Na guia Estilizar Barras, configure detalhes nos estilo das barras;</li>\n      <li>Na guia Legenda, poderá optar por usar legenda estilizada a seu gosto;</li>\n    </ul>\n  </div>\n);\n\nexport default Home;\n","export const ADD_DATA = 'ADD_DATA';\nexport const ADD_COLOR = 'ADD_COLOR';\nexport const ADD_BACKGROUND = 'ADD_BACKGROUND';\nexport const ADD_STYLEBAR = 'ADD_STYLEBAR';\nexport const ADD_LEGEND = 'ADD_LEGEND';\nexport const REMOVE_DATA = 'REMOVE_DATA';\nexport const EDIT_COLOR = 'EDIT_COLOR';\nexport const EDIT_QTY = 'EDIT_QTY';\n\nexport const actionAddData = (state) => ({ type: ADD_DATA, state });\n\nexport const actionAddColor = (state) => ({ type: ADD_COLOR, state });\n\nexport const actionAddBackground = (state) => ({ type: ADD_BACKGROUND, state });\n\nexport const actionAddStyleBar = (state) => ({ type: ADD_STYLEBAR, state });\n\nexport const actionAddLegend = (state) => ({ type: ADD_LEGEND, state });\n\nexport const actionRemoveData = (state) => ({ type: REMOVE_DATA, state });\n\nexport const actionEditColor = (state) => ({ type: EDIT_COLOR, state });\n\nexport const actionEditQty = (state) => ({ type: EDIT_QTY, state });\n","import React from 'react';\nimport './Editar.css';\n\nconst EditBar = ({\n  text, color, changeColor, qty, changeQty, remove,\n}) => (\n  <div className=\"EditBar\">\n    <span>{text}</span>\n    <input type=\"color\" value={color} onChange={changeColor} />\n    <input type=\"number\" value={qty} onChange={changeQty} />\n    <button type=\"button\" onClick={remove}>Remove</button>\n  </div>\n);\n\nexport default EditBar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actionEditColor, actionEditQty, actionRemoveData } from '../../redux/actions';\nimport EditBar from '../EditBar/EditBar';\nimport './InputContainer.css';\n\nconst EditBarContainer = ({\n  data, colors, removeData, editColor, editQty,\n}) => {\n  const names = Object.keys(data);\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Editar Barras</h3>\n      {names.map((name, index) => (\n        <EditBar\n          text={name}\n          key={name}\n          color={colors[index]}\n          qty={data[name]}\n          remove={() => removeData({ name, color: colors[index] })}\n          changeColor={({ target: { value } }) => editColor({ index, color: value })}\n          changeQty={({ target: { value } }) => editQty({ name, qty: value })}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  colors: state.colors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeData: (state) => dispatch(actionRemoveData(state)),\n  editColor: (state) => dispatch(actionEditColor(state)),\n  editQty: (state) => dispatch(actionEditQty(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBarContainer);\n","import {\n  bool,\n  func, string, number, oneOfType,\n} from 'prop-types';\nimport './Input.css';\n\nimport React from 'react';\n\nconst Input = (props) => {\n  const {\n    labelText, value, change, type, name, checked,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Input\">\n      {type !== 'radio' && type !== 'checkbox' ? labelText : ''}\n      <input\n        type={type}\n        id={name}\n        value={value}\n        checked={checked}\n        onChange={change}\n        name={name}\n      />\n      {type === 'radio' || type === 'checkbox' ? labelText : ''}\n    </label>\n  );\n};\n\nInput.propTypes = {\n  labelText: string.isRequired,\n  value: oneOfType([number, string, bool]),\n  change: func.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n};\n\nInput.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Input;\n","import { func, string, arrayOf } from 'prop-types';\nimport React from 'react';\nimport './Select.css';\n\nconst Select = (props) => {\n  const {\n    labelText, value, change, name, options,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Select\">\n      {labelText}\n      <select\n        id={name}\n        value={value}\n        onChange={change}\n        name={name}\n      >\n        {\n          options.map((option) => <option key={option}>{option}</option>)\n        }\n      </select>\n    </label>\n  );\n};\n\nSelect.propTypes = {\n  labelText: string.isRequired,\n  value: string,\n  change: func.isRequired,\n  name: string.isRequired,\n  options: arrayOf(string).isRequired,\n};\n\nSelect.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddBackground } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport Select from '../Select/Select';\nimport './InputContainer.css';\n\nclass InputBackground extends Component {\n  constructor() {\n    super();\n    this.state = {\n      backgroundColor: '#fff',\n      lineColor: '#000',\n      fontSizeBackground: '10',\n      fontBackground: 'monospace',\n      widthGraph: '1000',\n      heightGraph: '500',\n      widthLine: '1',\n      maxPercent: '100%',\n      percentSide: 'left',\n      widthBorder: '1',\n      borderColor: 'black',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n    const { addBackground } = this.props;\n    addBackground({ [name]: value });\n  }\n\n  render() {\n    const {\n      backgroundColor, lineColor, fontSizeBackground, widthGraph, heightGraph,\n      widthLine, fontBackground, maxPercent, widthBorder, borderColor,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Estilo Background</h3>\n        <Input type=\"color\" name=\"backgroundColor\" labelText=\"Cor de fundo:\" value={backgroundColor} change={this.handlerChange} />\n        <Input type=\"color\" name=\"lineColor\" labelText=\"Cor da linha:\" value={lineColor} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthLine\" labelText=\"Largura da linha:\" value={widthLine} change={this.handlerChange} />\n        <Input type=\"number\" name=\"fontSizeBackground\" labelText=\"Tamanho da letra:\" value={fontSizeBackground} change={this.handlerChange} />\n        <Input type=\"text\" name=\"fontBackground\" labelText=\"Fonte de fundo:\" value={fontBackground} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthGraph\" labelText=\"Largura do grafico:\" value={widthGraph} change={this.handlerChange} />\n        <Input type=\"number\" name=\"heightGraph\" labelText=\"Altura do grafico:\" value={heightGraph} change={this.handlerChange} />\n        <Input type=\"number\" name=\"widthBorder\" labelText=\"Espessura da borda:\" value={widthBorder} change={this.handlerChange} />\n        <Input type=\"color\" name=\"borderColor\" labelText=\"Cor da borda:\" value={borderColor} change={this.handlerChange} />\n        <Input type=\"radio\" name=\"percentSide\" labelText=\"Esquerdo\" value=\"left\" change={this.handlerChange} />\n        <Input type=\"radio\" name=\"percentSide\" labelText=\"Direito\" value=\"right\" change={this.handlerChange} />\n        <Select\n          name=\"maxPercent\"\n          labelText=\"Porcetagem a ser exibida:\"\n          value={maxPercent}\n          change={this.handlerChange}\n          options={['100%', '70%', '50%']}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBackground: (state) => dispatch(actionAddBackground(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputBackground);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddStyleBar } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass InputBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      widthBar: '60',\n      fontSizeBar: '15',\n      fontColordifBar: false,\n      fontColor: 'black',\n      fontBar: 'monospace',\n      topPercent: false,\n      baseName: true,\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const {\n      name, value, checked, type,\n    } = target;\n    const { addStyleBar } = this.props;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    this.setState({ [name]: valueInput });\n    addStyleBar({ [name]: valueInput });\n  }\n\n  render() {\n    const {\n      widthBar, fontSizeBar, fontColordifBar, fontColor, topPercent, fontBar, baseName,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Estilo das Barras</h3>\n        <Input\n          type=\"number\"\n          name=\"widthBar\"\n          labelText=\"Largura das barras:\"\n          value={widthBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"number\"\n          name=\"fontSizeBar\"\n          labelText=\"Tamanho da fonte:\"\n          value={fontSizeBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"text\"\n          name=\"fontBar\"\n          labelText=\"Fonte da barra:\"\n          value={fontBar}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"checkbox\"\n          name=\"fontColorBlack\"\n          labelText=\"Cor da fonte diferente da barra:\"\n          checked={fontColordifBar}\n          change={this.handlerChange}\n        />\n        {\n         fontColordifBar\n        && (\n        <Input\n          type=\"color\"\n          name=\"fontColor\"\n          labelText=\"Cor da fonte:\"\n          value={fontColor}\n          change={this.handlerChange}\n        />\n        )\n        }\n        <Input\n          type=\"checkbox\"\n          name=\"topPercent\"\n          labelText=\"Exibir a porcentagem no topo da barra:\"\n          checked={topPercent}\n          change={this.handlerChange}\n        />\n        <Input\n          type=\"checkbox\"\n          name=\"baseName\"\n          labelText=\"Exibir o nome na base da barra:\"\n          checked={baseName}\n          change={this.handlerChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addStyleBar: (state) => dispatch(actionAddStyleBar(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddColor, actionAddData } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass InputData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataName: '',\n      qty: 0,\n      color: 'black',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertData = this.insertData.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  insertData() {\n    const { addData, addColor } = this.props;\n    const { dataName, qty, color } = this.state;\n    addData({ [dataName]: qty });\n    addColor(color);\n    this.setState({ dataName: '', qty: 0, color: '' });\n  }\n\n  render() {\n    const { dataName, qty, color } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Inserir Dados</h3>\n        <Input type=\"text\" name=\"dataName\" labelText=\"Nome:\" value={dataName} change={this.handlerChange} />\n        <Input type=\"number\" name=\"qty\" labelText=\"Quantidade:\" value={qty} change={this.handlerChange} />\n        <Input type=\"color\" name=\"color\" value={color} labelText=\"Cor:\" change={this.handlerChange} />\n        <button type=\"button\" onClick={this.insertData}>Inserir Dado</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addData: (state) => dispatch(actionAddData(state)),\n  addColor: (state) => dispatch(actionAddColor(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputData);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddLegend } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass Legend extends Component {\n  constructor() {\n    super();\n    this.state = {\n      withLegend: false,\n      fontLegend: 'monospace',\n      fontLegendSize: '20',\n      fontColorLegend: 'black',\n      colorLegend: '#fff',\n      borderLegend: 1,\n      colorBorderLegend: 'black',\n      legendSide: 'right',\n      legendVertical: 'atop',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertLegend = this.insertLegend.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    this.setState({ [name]: valueInput }, () => {\n      if (name === 'withLegend') this.insertLegend();\n    });\n  }\n\n  insertLegend() {\n    const { addLegend } = this.props;\n    addLegend({ ...this.state });\n  }\n\n  render() {\n    const {\n      withLegend, fontLegend, fontLegendSize, colorLegend, borderLegend, colorBorderLegend,\n      fontColorLegend,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Legenda</h3>\n        <Input type=\"checkbox\" name=\"withLegend\" labelText=\"Com legenda\" checked={withLegend} change={this.handlerChange} />\n        { withLegend\n        && (\n          <>\n            <Input type=\"text\" name=\"fontLegend\" labelText=\"Fonte da legenda:\" value={fontLegend} change={this.handlerChange} />\n            <Input\n              type=\"number\"\n              name=\"fontLegendSize\"\n              labelText=\"Tamanho da fonte:\"\n              value={fontLegendSize}\n              change={this.handlerChange}\n            />\n            <Input type=\"color\" name=\"fontColorLegend\" labelText=\"Cor da fonte:\" value={fontColorLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorLegend\" labelText=\"Cor de fundo da legenda:\" value={colorLegend} change={this.handlerChange} />\n            <Input type=\"number\" name=\"borderLegend\" labelText=\"Largura da borda:\" value={borderLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorBorderLegend\" labelText=\"Cor da borda:\" value={colorBorderLegend} change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Esquerdo\" value=\"left\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Direito\" value=\"right\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Superior\" value=\"atop\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Inferior\" value=\"bottom\" change={this.handlerChange} />\n            <button type=\"button\" onClick={this.insertLegend}>Aplicar</button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => ({\n  addLegend: (state) => dispatch(actionAddLegend(state)),\n});\n\nexport default connect(null, mapDispacthToProps)(Legend);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport EditBarContainer from '../../components/InputsContainer/EditBarContainer';\nimport InputBackground from '../../components/InputsContainer/InputBackground';\nimport InputBar from '../../components/InputsContainer/InputBar';\nimport InputData from '../../components/InputsContainer/InputData';\nimport Legend from '../../components/InputsContainer/Lengend';\nimport './DataPage.css';\n\nconst DataPage = () => (\n  <div className=\"DataPage\">\n    <Switch>\n      <Route exact path=\"/percentage-chart/settings\" component={InputBackground} />\n      <Route path=\"/percentage-chart/settings/insert-data\" component={InputData} />\n      <Route path=\"/percentage-chart/settings/edit-bar\" component={EditBarContainer} />\n      <Route path=\"/percentage-chart/settings/style-bar\" component={InputBar} />\n      <Route path=\"/percentage-chart/settings/legend\" component={Legend} />\n    </Switch>\n  </div>\n);\n\nexport default DataPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavSet.css';\n\nconst NavSet = () => (\n  <nav className=\"NavSet\">\n    <ul>\n      <li><Link to=\"/percentage-chart/settings\">Estilo Background</Link></li>\n      <li><Link to=\"/percentage-chart/settings/insert-data\">Inserir Dados</Link></li>\n      <li><Link to=\"/percentage-chart/settings/edit-bar\">Editar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/style-bar\">Estilizar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/legend\">Legenda</Link></li>\n    </ul>\n    <Link to=\"/percentage-chart/code\"><button type=\"button\">Concluir</button></Link>\n  </nav>\n);\n\nexport default NavSet;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PercentChart } from 'stylized-percentage-chart';\nimport NavSet from '../../components/NavSet/NavSet';\n\nimport './GraphicPage.css';\n\nconst GraphicPage = (props) => {\n  const {\n    data, colors, maxPercent, style,\n  } = props;\n  return (\n    <div className=\"GraphicPage\">\n      <NavSet />\n      <div className=\"graphic\">\n        <PercentChart\n          style={style}\n          data={data}\n          maxPercent={maxPercent}\n          colors={colors}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  maxPercent: state.maxPercent,\n});\nexport default connect(mapStateToProps)(GraphicPage);\n","import React from 'react';\nimport DataPage from '../DataPage/DataPage';\nimport GraphicPage from '../GraphicPage/GraphicPage';\nimport './SetPage.css';\n\nfunction SetPage() {\n  return (\n    <div className=\"SetPage\">\n      <DataPage />\n      <GraphicPage />\n    </div>\n  );\n}\n\nexport default SetPage;\n","export const summaryData = [\n  {\n    name: 'data',\n    description: 'O data receberá um objeto onde a chave será o nome de referencia ao dado a ser exibido e o valor será o numero correspondente ao mesmo. O data fica fora do objeto “style” pois o mesmo conterá os dados a ser exibido.',\n  },\n  {\n    name: 'colors',\n    description: 'O colors é um array com as cores exibidas nas barras, sendo a sua ordem seguindo a sequencia do objeto data. Caso não seja passada cores o suficiente, as barras terão a cor #aaa e a mesma não será exibida na legenda.',\n  },\n  {\n    name: 'maxPercent',\n    description: 'O maxPercent pode receber três tipos: 100%, 75% e 50%, sendo esses o maximo de porcentagem a ser exibido no background. O maxPercent não está no objeto style para que caso prefira fazer uma logica para ser exibido de acordo com o resultado. Caso não seja passado ele assumirá o  valor de 100%.',\n  },\n];\n\nexport const summaryStyle = [\n  {\n    name: 'backgrondColor',\n    description: 'O backgroundColor especifica a a cor de funco do grafico. Caso nenhum valor seja passado assumirá o valor ‘white’.',\n  },\n  {\n    name: 'lineColor',\n    description: 'O lineColor define a cor das linhas de marcação da porcentagem no fundo do gráfico, caso não queira essas linhas, basta colocar a mesma cor que o backgroundColor. Caso nenhum valor seja passado, assumirá o valor ‘black’.',\n  },\n  {\n    name: 'widthLine',\n    description: 'A widthLine determina a espessura da linha que divide a porcentagem no fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'fontSizeBackground',\n    description: 'O fontSizeBackground informa o tamanho da letra usada para exibir a porcentagem no fundo do gráfico. Caso nenhum valor seja passado, assumirá o valor ‘10’.',\n  },\n  {\n    name: 'fontBackgorund ',\n    description: 'A fontBackground determina a font-family usada na porcentagem do fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'widthGraph',\n    description: 'O widthGraph especifica a largura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1000’.',\n  },\n  {\n    name: 'heightGraph',\n    description: 'heightGraph representa a altura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘500’.',\n  },\n  {\n    name: 'WidthBorder',\n    description: 'O widthBorder representa a espessura da borda do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'borderColor',\n    description: 'O borderColor determina a cor da borda do gráfico.Caso nenhum valor seja passado, assumirá o valor de ‘black’.',\n  },\n  {\n    name: 'percentSide',\n    description: 'O percentSide determina o lado onde será exibido a porcentagem, caso nenhum valor seja passado receberá o valor de ‘left’.',\n  },\n  {\n    name: 'widthBar',\n    description: 'A widthBar determina a largura das barras. Caso nenhum valor seja passado receberá o valor de ‘60’.',\n  },\n  {\n    name: 'fontSizeBar',\n    description: 'A fontSizeBar determina o tamanho da letra escrita na base da barra. Caso não seja passado nenhum valor, receberá ‘15’.',\n  },\n  {\n    name: 'fontBar',\n    description: 'A fontBar determina a font-family usada na base da barra. Caso nenhum valor seja passado, assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'fontColordifBar',\n    description: 'O fontColordifBar recebe um booleano onde determina se a cor das letras na base da barra terá a mesma cor que a barra, caso não seja acionado a cor será a mesma que as barras.',\n  },\n  {\n    name: 'fontColor',\n    description: 'Caso opte pela cor das letras serem diferente das barras, poderá escolher a cor através do fontColor, tendo como padrão o valor ‘black’.',\n  },\n  {\n    name: 'topPercent',\n    description: 'Quando acionado o topPercent exibe o valor da porcentagem no topo da barra, sua formatação é a mesma que as letras da base da barra, porém sua exibição é independente.',\n  },\n  {\n    name: 'baseName',\n    description: 'O baseName determina se será exibido ou não o nome na base da barra. Caso opte por usar legenda pode desativá-lo passando o valor booleano de false.',\n  },\n  {\n    name: 'withLegend',\n    description: 'O withLegend determina se você vai querer um gráfico com legenda ou não, recebendo o valor booleano de true para sim, tendo como padão o valor false.',\n  },\n  {\n    name: 'fonteLegend',\n    description: 'O fonteLegend determina o font-family usado na legenda, sendo o padrão ‘monospace’.',\n  },\n  {\n    name: 'fontLegendSize',\n    description: 'O fontColorLegend determina a cor da fonte usada na legenda, sendo o padrão ‘black’.',\n  },\n  {\n    name: 'colorLegend',\n    description: 'O colorLegend determina a cor da  legenda, sendo o padrão ‘white’.',\n  },\n  {\n    name: 'borderLegend',\n    description: 'O borderLegend determina a espessura da borda da legenda. Caso nenhum valor seja passado, receberá ‘1’',\n  },\n  {\n    name: 'colorBorderLegend',\n    description: 'colorBorderLegend determina a cor da borda da legenda',\n  },\n  {\n    name: 'legendSide',\n    description: 'O legendSide determina o lado em que a legenda ficará, tendo como padrão ‘right’',\n  },\n  {\n    name: 'legendVertical',\n    description: 'O legendVertical determina o posicionamento da legenda na vertical, tendo como padrão o ‘atop’',\n  },\n\n];\n","import React from 'react';\nimport { summaryData, summaryStyle } from '../../data/summaryInfo';\nimport './SummaryPage.css';\n\nconst SummaryPage = () => (\n  <div className=\"Summary\">\n    <h2>Sumário</h2>\n    <h3>Dados dinâmicos</h3>\n    {summaryData.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n    <h3>Dados de estilo</h3>\n    {summaryStyle.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n  </div>\n);\n\nexport default SummaryPage;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { DiNpm, DiGithubBadge } from 'react-icons/di';\nimport CodePage from './pages/CodePage/CodePage';\nimport Home from './pages/Home/Home';\nimport SetPage from './pages/SetPage/SetPage';\nimport SummaryPage from './pages/SummaryPage.jsx/SummaryPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav id=\"nav-app\">\n        <div style={{ color: 'white', fontSize: '75px' }}>\n          <a href=\"https://github.com/Gonzagadavid/percentage-chart\" target=\"_blank\" rel=\"noreferrer\"><DiGithubBadge /></a>\n          <a href=\"https://www.npmjs.com/package/stylized-graphic-component\" target=\"_blank\" rel=\"noreferrer\"><DiNpm /></a>\n        </div>\n        <Link to=\"/percentage-chart\">Início</Link>\n        <Link to=\"/percentage-chart/settings\">Estilizar Gráfico</Link>\n        <Link to=\"/percentage-chart/code\">Código do Estilo</Link>\n        <Link to=\"/percentage-chart/summary\">Sumário</Link>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/percentage-chart\" component={Home} />\n          <Route path=\"/percentage-chart/settings\" component={SetPage} />\n          <Route path=\"/percentage-chart/code\" component={CodePage} />\n          <Route path=\"/percentage-chart/summary\" component={SummaryPage} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_BACKGROUND, ADD_COLOR, ADD_DATA, ADD_LEGEND, ADD_STYLEBAR, EDIT_COLOR, EDIT_QTY, REMOVE_DATA,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  data: {},\n  colors: [],\n  backgroundColor: 'white',\n  lineColor: 'black',\n  fontSizeBackground: '10',\n  widthGraph: '1000',\n  heightGraph: '500',\n  widthBorder: '1',\n  borderColor: 'black',\n  widthLine: '1',\n  fontBackground: 'monospace',\n  maxPercent: '100%',\n  percentSide: 'left',\n  widthBar: '60',\n  fontSizeBar: '15',\n  fontBar: 'monospace',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: false,\n  baseName: true,\n  withLegend: false,\n  fontLegend: 'monospace',\n  fontLegendSize: '20',\n  fontColorLegend: 'black',\n  colorLegend: 'white',\n  borderLegend: 1,\n  colorBorderLegend: 'black',\n  legendSide: 'right',\n  legendVertical: 'atop',\n};\n\nconst reducerData = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return { ...state, data: { ...state.data, ...action.state } };\n\n    case ADD_COLOR:\n      return { ...state, colors: [...state.colors, action.state] };\n\n    case ADD_BACKGROUND:\n      document.body.style.width = `${+action.state.widthGraph + 500}px`;\n      return { ...state, ...action.state };\n\n    case ADD_STYLEBAR:\n      return { ...state, ...action.state };\n\n    case ADD_LEGEND:\n      return { ...state, ...action.state };\n\n    case REMOVE_DATA:\n      return {\n        ...state,\n        data: Object\n          .keys(state.data)\n          .filter((key) => key !== action.state.name)\n          .reduce((newState, name) => ({ ...newState, [name]: state.data[name] }), {}),\n        colors: state.colors.filter((color) => color !== action.state.color),\n      };\n\n    case EDIT_COLOR:\n      return {\n        ...state,\n        colors: state\n          .colors\n          .map((color, index) => (index === action.state.index ? action.state.color : color)),\n      };\n\n    case EDIT_QTY:\n      return {\n        ...state,\n        data: { ...state.data, [action.state.name]: action.state.qty },\n      };\n\n    default: return state;\n  }\n};\n\nexport default reducerData;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducerData from './reducers';\n\nconst store = createStore(reducerData, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}