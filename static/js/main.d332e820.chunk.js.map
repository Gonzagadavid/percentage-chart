{"version":3,"sources":["pages/CodePage/CodePage.jsx","pages/Home/Home.jsx","redux/actions/index.js","components/EditBar/EditBar.jsx","components/InputsContainer/EditBarContainer.jsx","data/inputs.js","components/Input/Input.jsx","components/Select/Select.jsx","components/InputsContainer/InputBackground.jsx","components/InputsContainer/InputBar.jsx","components/InputsContainer/InputData.jsx","components/InputsContainer/Lengend.jsx","pages/DataPage/DataPage.jsx","components/NavSet/NavSet.jsx","pages/GraphicPage/GraphicPage.jsx","pages/SetPage/SetPage.jsx","data/summaryInfo.js","pages/SummaryPage.jsx/SummaryPage.jsx","App.jsx","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["connect","state","style","data","colors","widthGraph","heightGraph","widthBorder","backgroundColor","lineColor","fontSizeBackground","percentSide","widthLine","fontBackground","maxPercent","widthBar","fontSizeBar","fontBar","fontColordifBar","fontColor","topPercent","withLegend","fontLegend","fontLegendSize","fontColorLegend","colorLegend","borderLegend","colorBorderLegend","baseName","legendSide","legendVertical","borderColor","objectCode","useRef","npm","importComp","objData","Object","entries","reduce","str","arr","i","useState","copied","setCopied","copyToClip","ref","tempInput","document","createElement","value","current","innerText","body","appendChild","select","execCommand","removeChild","setTimeout","queryCommandSupported","className","type","onClick","map","color","Home","ADD_DATA","ADD_COLOR","ADD_BACKGROUND","ADD_STYLEBAR","ADD_LEGEND","REMOVE_DATA","EDIT_COLOR","EDIT_QTY","EditBar","text","changeColor","qty","changeQty","remove","onChange","dispatch","removeData","actionRemoveData","editColor","actionEditColor","editQty","actionEditQty","names","keys","name","index","target","inputBackground","labelText","inputData","inputBar","Input","props","change","checked","htmlFor","id","defaultProps","Select","options","option","addBackground","actionAddBackground","handlerChange","addStyleBar","actionAddStyleBar","valueInput","addData","actionAddData","addColor","actionAddColor","INITIAL_STATE","dataName","setState","Legend","bind","insertLegend","this","addLegend","Component","actionAddLegend","DataPage","exact","path","component","InputBackground","InputData","EditBarContainer","InputBar","NavSet","to","SetPage","summaryData","description","summaryStyle","SummaryPage","App","fontSize","href","rel","CodePage","reducerData","action","width","filter","key","newState","store","createStore","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d332e820.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './CodePage.css';\nimport Highlight from 'react-highlight';\nimport { GiConfirmed } from 'react-icons/gi';\nimport { FaRegCopy } from 'react-icons/fa';\n\nconst CodePage = ({\n  heightGraph, widthGraph, backgroundColor, lineColor, fontBar, fontSizeBackground,\n  widthLine, fontBackground, percentSide, widthBar, fontSizeBar,\n  fontColordifBar, fontColor, topPercent, withLegend, fontLegend, fontLegendSize, colorLegend,\n  borderLegend, colorBorderLegend, fontColorLegend, baseName, legendSide, legendVertical,\n  widthBorder, borderColor, data, maxPercent, colors,\n}) => {\n  const objectCode = useRef(null);\n  const npm = useRef(null);\n  const importComp = useRef(null);\n  const objData = `${Object\n    .entries(data)\n    .reduce((str, arr, i) => `${str}${i !== 0 ? ',' : ''} ${arr[0]}: ${arr[1]}`, '')} `;\n\n  const [copied, setCopied] = useState(false);\n  const copyToClip = (ref) => {\n    const tempInput = document.createElement('textarea');\n    tempInput.value = ref.current.innerText;\n    document.body.appendChild(tempInput);\n    tempInput.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempInput);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 3000);\n  };\n\n  return (document.queryCommandSupported('copy')\n    && (\n    <div className=\"CodePage\">\n      {copied ? (\n        <p className=\"copied\">\n          <GiConfirmed />\n          <span>Copied to clipboard!</span>\n        </p>\n      ) : ''}\n      <h2>Finalizando</h2>\n      <p>Crie um arquivo, copie e cole o objeto com os dados da estilização, depois o exporte</p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(objectCode)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={objectCode}>\n            {\n            `\n//style.js\n            \nconst style = { \n  widthGraph: '${widthGraph}',\n  widthBorder: '${widthBorder}',\n  heightGraph: '${heightGraph}',\n  backgroundColor: '${backgroundColor}',\n  lineColor: '${lineColor}',\n  fontSizeBackground: '${fontSizeBackground}',\n  percentSide: '${percentSide}',\n  widthLine: '${widthLine}',\n  fontBackground: '${fontBackground}',\n  widthBar: '${widthBar}',\n  fontSizeBar: '${fontSizeBar}',\n  fontBar: '${fontBar}',\n  fontColordifBar: ${fontColordifBar},\n  fontColor: '${fontColor}',\n  topPercent: ${topPercent},\n  withLegend: ${withLegend},\n  fontLegend: '${fontLegend}',\n  fontLegendSize: '${fontLegendSize}',\n  fontColorLegend: '${fontColorLegend}',\n  colorLegend: '${colorLegend}',\n  borderLegend: '${borderLegend}',\n  colorBorderLegend: '${colorBorderLegend}',\n  baseName: ${baseName},\n  legendSide: '${legendSide}',\n  legendVertical: '${legendVertical}',\n  borderColor: '${borderColor}',\n}\n\nexport default style\n`\n}\n          </p>\n        </Highlight>\n      </div>\n      <p>\n        Instale o componente libary em sua aplicação\n        (caso ocorra conflitos de versões, use o --force, isso não altera sua aplicação)\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(npm)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-shell\">\n          <p ref={npm}>\n            npm i stylized-graphic-component\n          </p>\n        </Highlight>\n      </div>\n      <p>\n        Importe o componete stylized-percentage-chart  e passe os dados do estilo e os dados a ser\n        renderizado como props\n      </p>\n      <div className=\"code\">\n        <button type=\"button\" className=\"copy-button\" onClick={() => copyToClip(importComp)}>\n          <FaRegCopy />\n        </button>\n        <Highlight className=\"language-javascript\">\n          <p ref={importComp}>\n            {\n              `\nimport React from 'react';\nimport { GraphicComponent } from 'stylized-graphic-component'\nimport style from ./path/style\n\nconst GraphicPage = () => (\n  <div className=\"graphic\">\n  <GraphicComponent\n      style={style}\n      data={{${objData}}}\n      maxPercent={'${maxPercent}'}\n      colors={[${colors.map((color) => `'${color}'`)}]}\n    />\n  </div>\n)\n\nexport default GraphicPage;\n`\n            }\n          </p>\n        </Highlight>\n      </div>\n    </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  widthGraph: state.widthGraph,\n  heightGraph: state.heightGraph,\n  widthBorder: state.widthBorder,\n  backgroundColor: state.backgroundColor,\n  lineColor: state.lineColor,\n  fontSizeBackground: state.fontSizeBackground,\n  percentSide: state.percentSide,\n  widthLine: state.widthLine,\n  fontBackground: state.fontBackground,\n  maxPercent: state.maxPercent,\n  widthBar: state.widthBar,\n  fontSizeBar: state.fontSizeBar,\n  fontBar: state.fontBar,\n  fontColordifBar: state.fontColordifBar,\n  fontColor: state.fontColor,\n  topPercent: state.topPercent,\n  withLegend: state.withLegend,\n  fontLegend: state.fontLegend,\n  fontLegendSize: state.fontLegendSize,\n  fontColorLegend: state.fontColorLegend,\n  colorLegend: state.colorLegend,\n  borderLegend: state.borderLegend,\n  colorBorderLegend: state.colorBorderLegend,\n  baseName: state.baseName,\n  legendSide: state.legendSide,\n  legendVertical: state.legendVertical,\n  borderColor: state.borderColor,\n});\nexport default connect(mapStateToProps)(CodePage);\n","import React from 'react';\nimport './Home.css';\n\nconst Home = () => (\n  <div className=\"Home\">\n    <h1>Stylized Graphic Component</h1>\n    <p>\n      Essa página tem como finalidade auxiliar na estilização do componente\n      libary stylized-percentage-chart\n    </p>\n    <p>Na página Estilizar gráfico encontrar ferramentas que permitirá que estilize o gráfico:</p>\n    <ul>\n      <li>Na guia Backgroud, estilizar o fundo do seu gráfico;</li>\n      <li>Na guia Inserir Dados, insira dados simulando o que ocorrerá na sua aplização;</li>\n      <li>Na guia Editar Barras, poderá alterar e excluir os dados e trocar a cor das barras;</li>\n      <li>Na guia Estilizar Barras, configure detalhes nos estilo das barras;</li>\n      <li>Na guia Legenda, poderá optar por usar legenda estilizada a seu gosto;</li>\n    </ul>\n  </div>\n);\n\nexport default Home;\n","export const ADD_DATA = 'ADD_DATA';\nexport const ADD_COLOR = 'ADD_COLOR';\nexport const ADD_BACKGROUND = 'ADD_BACKGROUND';\nexport const ADD_STYLEBAR = 'ADD_STYLEBAR';\nexport const ADD_LEGEND = 'ADD_LEGEND';\nexport const REMOVE_DATA = 'REMOVE_DATA';\nexport const EDIT_COLOR = 'EDIT_COLOR';\nexport const EDIT_QTY = 'EDIT_QTY';\n\nexport const actionAddData = (state) => ({ type: ADD_DATA, state });\n\nexport const actionAddColor = (state) => ({ type: ADD_COLOR, state });\n\nexport const actionAddBackground = (state) => ({ type: ADD_BACKGROUND, state });\n\nexport const actionAddStyleBar = (state) => ({ type: ADD_STYLEBAR, state });\n\nexport const actionAddLegend = (state) => ({ type: ADD_LEGEND, state });\n\nexport const actionRemoveData = (state) => ({ type: REMOVE_DATA, state });\n\nexport const actionEditColor = (state) => ({ type: EDIT_COLOR, state });\n\nexport const actionEditQty = (state) => ({ type: EDIT_QTY, state });\n","import React from 'react';\nimport './Editar.css';\n\nconst EditBar = ({\n  text, color, changeColor, qty, changeQty, remove,\n}) => (\n  <div className=\"EditBar\">\n    <span>{text}</span>\n    <input type=\"color\" value={color} onChange={changeColor} />\n    <input type=\"number\" value={qty} onChange={changeQty} />\n    <button type=\"button\" onClick={remove}>Remove</button>\n  </div>\n);\n\nexport default EditBar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { actionEditColor, actionEditQty, actionRemoveData } from '../../redux/actions';\nimport EditBar from '../EditBar/EditBar';\nimport './InputContainer.css';\n\nconst EditBarContainer = ({\n  data, colors, removeData, editColor, editQty,\n}) => {\n  const names = Object.keys(data);\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Editar Barras</h3>\n      {names.map((name, index) => (\n        <EditBar\n          text={name}\n          key={name}\n          color={colors[index]}\n          qty={data[name]}\n          remove={() => removeData({ name, color: colors[index] })}\n          changeColor={({ target: { value } }) => editColor({ index, color: value })}\n          changeQty={({ target: { value } }) => editQty({ name, qty: value })}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  colors: state.colors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeData: (state) => dispatch(actionRemoveData(state)),\n  editColor: (state) => dispatch(actionEditColor(state)),\n  editQty: (state) => dispatch(actionEditQty(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBarContainer);\n","export const inputBackground = [\n  { type: 'color', name: 'backgroundColor', labelText: 'Cor de fundo:' },\n  { type: 'color', name: 'lineColor', labelText: 'Cor da linha:' },\n  { type: 'number', name: 'widthLine', labelText: 'Largura da linha:' },\n  { type: 'number', name: 'fontSizeBackground', labelText: 'Tamanho da letra:' },\n  { type: 'text', name: 'fontBackground', labelText: 'Fonte de fundo:' },\n  { type: 'number', name: 'widthGraph', labelText: 'Largura do grafico:' },\n  { type: 'number', name: 'heightGraph', labelText: 'Altura do grafico:' },\n  { type: 'number', name: 'widthBorder', labelText: 'Espessura da borda:' },\n  { type: 'color', name: 'borderColor', labelText: 'Cor da borda:' },\n  {\n    type: 'radio', name: 'percentSide', labelText: 'Esquerdo', value: 'left',\n  },\n  {\n    type: 'radio', name: 'percentSide', labelText: 'Direito', value: 'right',\n  },\n];\n\nexport const inputData = [\n  { type: 'text', name: 'dataName', labelText: 'Nome:' },\n  { type: 'number', name: 'qty', labelText: 'Quantidade:' },\n  { type: 'color', name: 'color', labelText: 'Cor:' },\n];\n\nexport const inputBar = [\n  { type: 'checkbox', name: 'fontColordifBar', labelText: 'Cor da fonte diferente da barra:' },\n  { type: 'number', name: 'widthBar', labelText: 'Largura das barras:' },\n  { type: 'number', name: 'fontSizeBar', labelText: 'Tamanho da fonte:' },\n  { type: 'text', name: 'fontBar', labelText: 'Fonte da barra:' },\n  { type: 'checkbox', name: 'topPercent', labelText: 'Exibir a porcentagem no topo da barra:' },\n  { type: 'checkbox', name: 'baseName', labelText: 'Exibir o nome na base da barra:' },\n];\n","import {\n  bool,\n  func, string, number, oneOfType,\n} from 'prop-types';\nimport './Input.css';\n\nimport React from 'react';\n\nconst Input = (props) => {\n  const {\n    labelText, value, change, type, name, checked,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Input\">\n      {type !== 'radio' && type !== 'checkbox' ? labelText : ''}\n      <input\n        type={type}\n        id={name}\n        value={value}\n        checked={checked}\n        onChange={change}\n        name={name}\n      />\n      {type === 'radio' || type === 'checkbox' ? labelText : ''}\n    </label>\n  );\n};\n\nInput.propTypes = {\n  labelText: string.isRequired,\n  value: oneOfType([number, string, bool]),\n  change: func.isRequired,\n  type: string.isRequired,\n  name: string.isRequired,\n};\n\nInput.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Input;\n","import { func, string, arrayOf } from 'prop-types';\nimport React from 'react';\nimport './Select.css';\n\nconst Select = (props) => {\n  const {\n    labelText, value, change, name, options,\n  } = props;\n\n  return (\n    <label htmlFor={name} className=\"Select\">\n      {labelText}\n      <select\n        id={name}\n        value={value}\n        onChange={change}\n        name={name}\n      >\n        {\n          options.map((option) => <option key={option}>{option}</option>)\n        }\n      </select>\n    </label>\n  );\n};\n\nSelect.propTypes = {\n  labelText: string.isRequired,\n  value: string,\n  change: func.isRequired,\n  name: string.isRequired,\n  options: arrayOf(string).isRequired,\n};\n\nSelect.defaultProps = {\n  value: 'Not found',\n};\n\nexport default Select;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { inputBackground } from '../../data/inputs';\nimport { actionAddBackground } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport Select from '../Select/Select';\nimport './InputContainer.css';\n\nconst InputBackground = ({ state, addBackground }) => {\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    addBackground({ [name]: value });\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Estilo Background</h3>\n      {\n        inputBackground.map(({\n          type, name, labelText, value,\n        }) => (\n          <Input\n            type={type}\n            name={name}\n            labelText={labelText}\n            value={value || state[name]}\n            change={handlerChange}\n          />\n        ))\n      }\n      <Select\n        name=\"maxPercent\"\n        labelText=\"Porcetagem a ser exibida:\"\n        value={state.maxPercent}\n        change={handlerChange}\n        options={['100%', '70%', '50%']}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ state });\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBackground: (state) => dispatch(actionAddBackground(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBackground);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { inputBar } from '../../data/inputs';\nimport { actionAddStyleBar } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nconst InputBar = ({ addStyleBar, state }) => {\n  const handlerChange = ({ target }) => {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    addStyleBar({ [name]: valueInput });\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Estilo das Barras</h3>\n      {\n         state.fontColordifBar\n        && (\n        <Input\n          type=\"color\"\n          name=\"fontColor\"\n          labelText=\"Cor da fonte:\"\n          value={state.fontColor}\n          change={handlerChange}\n        />\n        )\n        }\n      {\n        inputBar.map(({ name, type, labelText }) => (\n          <Input\n            type={type}\n            name={name}\n            labelText={labelText}\n            checked={state[name]}\n            value={state[name]}\n            change={handlerChange}\n          />\n        ))\n        }\n\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ state });\n\nconst mapDispatchToProps = (dispatch) => ({\n  addStyleBar: (state) => dispatch(actionAddStyleBar(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputBar);\n","import React, { useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { inputData } from '../../data/inputs';\nimport { actionAddColor, actionAddData } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nconst InputData = ({ addData, addColor }) => {\n  const INITIAL_STATE = { dataName: '', qty: 0, color: 'black' };\n\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const handlerChange = ({ target }) => {\n    const { name, value } = target;\n    setState({ ...state, [name]: value });\n  };\n\n  const insertData = () => {\n    const { dataName, qty, color } = state;\n    addData({ [dataName]: qty });\n    addColor(color);\n    setState(INITIAL_STATE);\n  };\n\n  return (\n    <div className=\"InputConatiner\">\n      <h3>Inserir Dados</h3>\n      {\n        inputData.map(({ type, name, labelText }) => (\n          <Input\n            type={type}\n            name={name}\n            labelText={labelText}\n            value={state[name]}\n            change={handlerChange}\n          />\n        ))\n      }\n      <button type=\"button\" onClick={insertData}>Inserir Dado</button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addData: (state) => dispatch(actionAddData(state)),\n  addColor: (state) => dispatch(actionAddColor(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputData);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actionAddLegend } from '../../redux/actions';\nimport Input from '../Input/Input';\nimport './InputContainer.css';\n\nclass Legend extends Component {\n  constructor() {\n    super();\n    this.state = {\n      withLegend: false,\n      fontLegend: 'monospace',\n      fontLegendSize: '20',\n      fontColorLegend: 'black',\n      colorLegend: '#fff',\n      borderLegend: 1,\n      colorBorderLegend: 'black',\n      legendSide: 'right',\n      legendVertical: 'atop',\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.insertLegend = this.insertLegend.bind(this);\n  }\n\n  handlerChange({ target }) {\n    const {\n      name, value, checked, type,\n    } = target;\n    const checkbox = type === 'checkbox';\n    const valueInput = checkbox ? checked : value;\n    this.setState({ [name]: valueInput }, () => {\n      if (name === 'withLegend') this.insertLegend();\n    });\n  }\n\n  insertLegend() {\n    const { addLegend } = this.props;\n    addLegend({ ...this.state });\n  }\n\n  render() {\n    const {\n      withLegend, fontLegend, fontLegendSize, colorLegend, borderLegend, colorBorderLegend,\n      fontColorLegend,\n    } = this.state;\n    return (\n      <div className=\"InputConatiner\">\n        <h3>Legenda</h3>\n        <Input type=\"checkbox\" name=\"withLegend\" labelText=\"Com legenda\" checked={withLegend} change={this.handlerChange} />\n        { withLegend\n        && (\n          <>\n            <Input type=\"text\" name=\"fontLegend\" labelText=\"Fonte da legenda:\" value={fontLegend} change={this.handlerChange} />\n            <Input\n              type=\"number\"\n              name=\"fontLegendSize\"\n              labelText=\"Tamanho da fonte:\"\n              value={fontLegendSize}\n              change={this.handlerChange}\n            />\n            <Input type=\"color\" name=\"fontColorLegend\" labelText=\"Cor da fonte:\" value={fontColorLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorLegend\" labelText=\"Cor de fundo da legenda:\" value={colorLegend} change={this.handlerChange} />\n            <Input type=\"number\" name=\"borderLegend\" labelText=\"Largura da borda:\" value={borderLegend} change={this.handlerChange} />\n            <Input type=\"color\" name=\"colorBorderLegend\" labelText=\"Cor da borda:\" value={colorBorderLegend} change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Esquerdo\" value=\"left\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendSide\" labelText=\"Direito\" value=\"right\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Superior\" value=\"atop\" change={this.handlerChange} />\n            <Input type=\"radio\" name=\"legendVertical\" labelText=\"Inferior\" value=\"bottom\" change={this.handlerChange} />\n            <button type=\"button\" onClick={this.insertLegend}>Aplicar</button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispacthToProps = (dispatch) => ({\n  addLegend: (state) => dispatch(actionAddLegend(state)),\n});\n\nexport default connect(null, mapDispacthToProps)(Legend);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport EditBarContainer from '../../components/InputsContainer/EditBarContainer';\nimport InputBackground from '../../components/InputsContainer/InputBackground';\nimport InputBar from '../../components/InputsContainer/InputBar';\nimport InputData from '../../components/InputsContainer/InputData';\nimport Legend from '../../components/InputsContainer/Lengend';\nimport './DataPage.css';\n\nconst DataPage = () => (\n  <div className=\"DataPage\">\n    <Switch>\n      <Route exact path=\"/percentage-chart/settings\" component={InputBackground} />\n      <Route path=\"/percentage-chart/settings/insert-data\" component={InputData} />\n      <Route path=\"/percentage-chart/settings/edit-bar\" component={EditBarContainer} />\n      <Route path=\"/percentage-chart/settings/style-bar\" component={InputBar} />\n      <Route path=\"/percentage-chart/settings/legend\" component={Legend} />\n    </Switch>\n  </div>\n);\n\nexport default DataPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavSet.css';\n\nconst NavSet = () => (\n  <nav className=\"NavSet\">\n    <ul>\n      <li><Link to=\"/percentage-chart/settings\">Estilo Background</Link></li>\n      <li><Link to=\"/percentage-chart/settings/insert-data\">Inserir Dados</Link></li>\n      <li><Link to=\"/percentage-chart/settings/edit-bar\">Editar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/style-bar\">Estilizar Barras</Link></li>\n      <li><Link to=\"/percentage-chart/settings/legend\">Legenda</Link></li>\n    </ul>\n    <Link to=\"/percentage-chart/code\"><button type=\"button\">Concluir</button></Link>\n  </nav>\n);\n\nexport default NavSet;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PercentChart } from 'stylized-percentage-chart';\nimport NavSet from '../../components/NavSet/NavSet';\n\nimport './GraphicPage.css';\n\nconst GraphicPage = (props) => {\n  const {\n    data, colors, maxPercent, style,\n  } = props;\n  return (\n    <div className=\"GraphicPage\">\n      <NavSet />\n      <div className=\"graphic\">\n        <PercentChart\n          style={style}\n          data={data}\n          maxPercent={maxPercent}\n          colors={colors}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  style: state,\n  data: state.data,\n  colors: state.colors,\n  maxPercent: state.maxPercent,\n});\nexport default connect(mapStateToProps)(GraphicPage);\n","import React from 'react';\nimport DataPage from '../DataPage/DataPage';\nimport GraphicPage from '../GraphicPage/GraphicPage';\nimport './SetPage.css';\n\nfunction SetPage() {\n  return (\n    <div className=\"SetPage\">\n      <DataPage />\n      <GraphicPage />\n    </div>\n  );\n}\n\nexport default SetPage;\n","export const summaryData = [\n  {\n    name: 'data',\n    description: 'O data receberá um objeto onde a chave será o nome de referencia ao dado a ser exibido e o valor será o numero correspondente ao mesmo. O data fica fora do objeto “style” pois o mesmo conterá os dados a ser exibido.',\n  },\n  {\n    name: 'colors',\n    description: 'O colors é um array com as cores exibidas nas barras, sendo a sua ordem seguindo a sequencia do objeto data. Caso não seja passada cores o suficiente, as barras terão a cor #aaa e a mesma não será exibida na legenda.',\n  },\n  {\n    name: 'maxPercent',\n    description: 'O maxPercent pode receber três tipos: 100%, 75% e 50%, sendo esses o maximo de porcentagem a ser exibido no background. O maxPercent não está no objeto style para que caso prefira fazer uma logica para ser exibido de acordo com o resultado. Caso não seja passado ele assumirá o  valor de 100%.',\n  },\n];\n\nexport const summaryStyle = [\n  {\n    name: 'backgrondColor',\n    description: 'O backgroundColor especifica a a cor de funco do grafico. Caso nenhum valor seja passado assumirá o valor ‘white’.',\n  },\n  {\n    name: 'lineColor',\n    description: 'O lineColor define a cor das linhas de marcação da porcentagem no fundo do gráfico, caso não queira essas linhas, basta colocar a mesma cor que o backgroundColor. Caso nenhum valor seja passado, assumirá o valor ‘black’.',\n  },\n  {\n    name: 'widthLine',\n    description: 'A widthLine determina a espessura da linha que divide a porcentagem no fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'fontSizeBackground',\n    description: 'O fontSizeBackground informa o tamanho da letra usada para exibir a porcentagem no fundo do gráfico. Caso nenhum valor seja passado, assumirá o valor ‘10’.',\n  },\n  {\n    name: 'fontBackgorund ',\n    description: 'A fontBackground determina a font-family usada na porcentagem do fundo do gráfico. Caso nenhum valor seja passado ele assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'widthGraph',\n    description: 'O widthGraph especifica a largura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1000’.',\n  },\n  {\n    name: 'heightGraph',\n    description: 'heightGraph representa a altura no tamanho do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘500’.',\n  },\n  {\n    name: 'WidthBorder',\n    description: 'O widthBorder representa a espessura da borda do gráfico. Caso nenhum valor seja passado, assumirá o valor de ‘1’.',\n  },\n  {\n    name: 'borderColor',\n    description: 'O borderColor determina a cor da borda do gráfico.Caso nenhum valor seja passado, assumirá o valor de ‘black’.',\n  },\n  {\n    name: 'percentSide',\n    description: 'O percentSide determina o lado onde será exibido a porcentagem, caso nenhum valor seja passado receberá o valor de ‘left’.',\n  },\n  {\n    name: 'widthBar',\n    description: 'A widthBar determina a largura das barras. Caso nenhum valor seja passado receberá o valor de ‘60’.',\n  },\n  {\n    name: 'fontSizeBar',\n    description: 'A fontSizeBar determina o tamanho da letra escrita na base da barra. Caso não seja passado nenhum valor, receberá ‘15’.',\n  },\n  {\n    name: 'fontBar',\n    description: 'A fontBar determina a font-family usada na base da barra. Caso nenhum valor seja passado, assumirá o valor de ‘monospace’.',\n  },\n  {\n    name: 'fontColordifBar',\n    description: 'O fontColordifBar recebe um booleano onde determina se a cor das letras na base da barra terá a mesma cor que a barra, caso não seja acionado a cor será a mesma que as barras.',\n  },\n  {\n    name: 'fontColor',\n    description: 'Caso opte pela cor das letras serem diferente das barras, poderá escolher a cor através do fontColor, tendo como padrão o valor ‘black’.',\n  },\n  {\n    name: 'topPercent',\n    description: 'Quando acionado o topPercent exibe o valor da porcentagem no topo da barra, sua formatação é a mesma que as letras da base da barra, porém sua exibição é independente.',\n  },\n  {\n    name: 'baseName',\n    description: 'O baseName determina se será exibido ou não o nome na base da barra. Caso opte por usar legenda pode desativá-lo passando o valor booleano de false.',\n  },\n  {\n    name: 'withLegend',\n    description: 'O withLegend determina se você vai querer um gráfico com legenda ou não, recebendo o valor booleano de true para sim, tendo como padão o valor false.',\n  },\n  {\n    name: 'fonteLegend',\n    description: 'O fonteLegend determina o font-family usado na legenda, sendo o padrão ‘monospace’.',\n  },\n  {\n    name: 'fontLegendSize',\n    description: 'O fontColorLegend determina a cor da fonte usada na legenda, sendo o padrão ‘black’.',\n  },\n  {\n    name: 'colorLegend',\n    description: 'O colorLegend determina a cor da  legenda, sendo o padrão ‘white’.',\n  },\n  {\n    name: 'borderLegend',\n    description: 'O borderLegend determina a espessura da borda da legenda. Caso nenhum valor seja passado, receberá ‘1’',\n  },\n  {\n    name: 'colorBorderLegend',\n    description: 'colorBorderLegend determina a cor da borda da legenda',\n  },\n  {\n    name: 'legendSide',\n    description: 'O legendSide determina o lado em que a legenda ficará, tendo como padrão ‘right’',\n  },\n  {\n    name: 'legendVertical',\n    description: 'O legendVertical determina o posicionamento da legenda na vertical, tendo como padrão o ‘atop’',\n  },\n\n];\n","import React from 'react';\nimport { summaryData, summaryStyle } from '../../data/summaryInfo';\nimport './SummaryPage.css';\n\nconst SummaryPage = () => (\n  <div className=\"Summary\">\n    <h2>Sumário</h2>\n    <h3>Dados dinâmicos</h3>\n    {summaryData.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n    <h3>Dados de estilo</h3>\n    {summaryStyle.map(({ name, description }) => (\n      <div key={name} className=\"item\">\n        <h4>{name}</h4>\n        <p>{description}</p>\n      </div>\n    ))}\n  </div>\n);\n\nexport default SummaryPage;\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { DiNpm, DiGithubBadge } from 'react-icons/di';\nimport CodePage from './pages/CodePage/CodePage';\nimport Home from './pages/Home/Home';\nimport SetPage from './pages/SetPage/SetPage';\nimport SummaryPage from './pages/SummaryPage.jsx/SummaryPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav id=\"nav-app\">\n        <div style={{ color: 'white', fontSize: '75px' }}>\n          <a href=\"https://github.com/Gonzagadavid/percentage-chart\" target=\"_blank\" rel=\"noreferrer\"><DiGithubBadge /></a>\n          <a href=\"https://www.npmjs.com/package/stylized-graphic-component\" target=\"_blank\" rel=\"noreferrer\"><DiNpm /></a>\n        </div>\n        <Link to=\"/percentage-chart\">Início</Link>\n        <Link to=\"/percentage-chart/settings\">Estilizar Gráfico</Link>\n        <Link to=\"/percentage-chart/code\">Código do Estilo</Link>\n        <Link to=\"/percentage-chart/summary\">Sumário</Link>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/percentage-chart\" component={Home} />\n          <Route path=\"/percentage-chart/settings\" component={SetPage} />\n          <Route path=\"/percentage-chart/code\" component={CodePage} />\n          <Route path=\"/percentage-chart/summary\" component={SummaryPage} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ADD_BACKGROUND, ADD_COLOR, ADD_DATA, ADD_LEGEND, ADD_STYLEBAR, EDIT_COLOR, EDIT_QTY, REMOVE_DATA,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  data: {},\n  colors: [],\n  backgroundColor: 'white',\n  lineColor: 'black',\n  fontSizeBackground: '10',\n  widthGraph: '1000',\n  heightGraph: '500',\n  widthBorder: '1',\n  borderColor: 'black',\n  widthLine: '1',\n  fontBackground: 'monospace',\n  maxPercent: '100%',\n  percentSide: 'left',\n  widthBar: '60',\n  fontSizeBar: '15',\n  fontBar: 'monospace',\n  fontColordifBar: false,\n  fontColor: 'black',\n  topPercent: false,\n  baseName: true,\n  withLegend: false,\n  fontLegend: 'monospace',\n  fontLegendSize: '20',\n  fontColorLegend: 'black',\n  colorLegend: 'white',\n  borderLegend: 1,\n  colorBorderLegend: 'black',\n  legendSide: 'right',\n  legendVertical: 'atop',\n};\n\nconst reducerData = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return { ...state, data: { ...state.data, ...action.state } };\n\n    case ADD_COLOR:\n      return { ...state, colors: [...state.colors, action.state] };\n\n    case ADD_BACKGROUND:\n      document.body.style.width = `${+action.state.widthGraph + 500}px`;\n      return { ...state, ...action.state };\n\n    case ADD_STYLEBAR:\n      return { ...state, ...action.state };\n\n    case ADD_LEGEND:\n      return { ...state, ...action.state };\n\n    case REMOVE_DATA:\n      return {\n        ...state,\n        data: Object\n          .keys(state.data)\n          .filter((key) => key !== action.state.name)\n          .reduce((newState, name) => ({ ...newState, [name]: state.data[name] }), {}),\n        colors: state.colors.filter((color) => color !== action.state.color),\n      };\n\n    case EDIT_COLOR:\n      return {\n        ...state,\n        colors: state\n          .colors\n          .map((color, index) => (index === action.state.index ? action.state.color : color)),\n      };\n\n    case EDIT_QTY:\n      return {\n        ...state,\n        data: { ...state.data, [action.state.name]: action.state.qty },\n      };\n\n    default: return state;\n  }\n};\n\nexport default reducerData;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducerData from './reducers';\n\nconst store = createStore(reducerData, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}